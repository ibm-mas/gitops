{{- /*
Username of generated user will always be "masinst_${MAS_INSTANCE_ID}"
Password will be set to whatever is in the acc/cluster/instance/mongo#password secret at time of sync, or generated if the secret is not set

adler32sum of docdb config is included in job name; this means it will be rerun whenever docdb config changes
The job is idempotent in cases there the config change is inconsequential (e.g. a cert alias is changed).
If the config is modified to point to a different docdb instance, the user created in the previous DocDB will not be cleaned up
*/}}

{{- if not (empty .Values.docdb) }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: aws-docdb-add-user-{{ .Values.docdb | toYaml | adler32sum }}
  namespace: mas-{{ .Values.instance.id }}-syncres
  annotations:
    argocd.argoproj.io/sync-wave: "02"
spec:
  template:
    metadata:
      labels:
        app: "sync-job"
    spec:
      containers:
        - name: aws-docdb-process-user
          image: quay.io/ibmmas/cli:8.1.0-pre.gitops
          imagePullPolicy: IfNotPresent
          env:

            - name: ACCOUNT_ID
              value: "{{ .Values.account.id }}"
            - name: CLUSTER_ID
              value: "{{ .Values.cluster.id }}"
            - name: MAS_INSTANCE_ID
              value: "{{ .Values.instance.id }}"

            - name: DOCDB_HOST
              valueFrom:
                secretKeyRef:
                  name: aws-docdb
                  key: docdb_host
            - name: DOCDB_PORT
              valueFrom:
                secretKeyRef:
                  name: aws-docdb
                  key: docdb_port
            - name: DOCDB_MASTER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: aws-docdb
                  key: docdb_master_username
            - name: DOCDB_MASTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aws-docdb
                  key: docdb_master_password
            - name: DOCDB_INSTANCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aws-docdb
                  key: docdb_instance_password
            - name: DOCDB_MASTER_INFO
              valueFrom:
                secretKeyRef:
                  name: aws-docdb
                  key: docdb_master_info
            - name: SM_AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: aws_default_region
            - name: SM_AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: aws_access_key_id
            - name: SM_AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: aws_secret_access_key

          command:
            - /bin/sh
            - -c
            - |

              set -e


              echo
              echo "================================================================================"
              echo "/opt/app-root/src/run-role.sh aws_documentdb_user"
              echo "================================================================================"

              export MAS_CONFIG_DIR="/tmp/${MAS_INSTANCE_ID}/aws_documentdb_user"
              export USER_ACTION="add"

              echo "Params:"
              echo "    - MAS_INSTANCE_ID         ................... ${MAS_INSTANCE_ID}"
              echo "    - MAS_CONFIG_DIR          ................... ${MAS_CONFIG_DIR}"
              echo "    - DOCDB_HOST              ................... ${DOCDB_HOST}"
              echo "    - DOCDB_PORT              ................... ${DOCDB_PORT}"
              echo "    - DOCDB_MASTER_USERNAME   ................... ${DOCDB_MASTER_USERNAME:0:2}<snip>"
              echo "    - DOCDB_MASTER_PASSWORD   ................... ${DOCDB_MASTER_PASSWORD:0:2}<snip>"
              echo "    - DOCDB_INSTANCE_PASSWORD ................... ${DOCDB_MASTER_PASSWORD:0:2}<snip>"
              echo "    - USER_ACTION             ................... ${USER_ACTION}"

              mkdir -p ${MAS_CONFIG_DIR}
              # /opt/app-root/src/run-role.sh aws_documentdb_user
              # rc=$?
              # [ $rc -ne 0 ] && exit $rc
              echo "TODO: Run /opt/app-root/src/run-role.sh aws_documentdb_user (user action ${USER_ACTION})"


              # Read the username/password generated by the role
              # "{{ mas_config_dir }}/{{ docdb_instance_credentials_secret_name }}.yml"
              {# apiVersion: v1
              kind: Secret
              type: Opaque
              metadata:
                name: "{{ docdb_instance_credentials_secret_name }}"
              data:
                docdb_username: "{{ docdb_instance_username | b64encode }}"
                docdb_password: "{{ docdb_instance_password | b64encode }}" #}
              DOCDB_INSTANCE_USERNAME="masinst_${MAS_INSTANCE_ID}"
              DOCDB_INSTANCE_PASSWORD=${DOCDB_INSTANCE_PASSWORD:-`cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 20`}
              
              echo 
              echo "================================================================================"
              echo "Updating $SECRET_NAME_MONGO"
              echo "================================================================================"

              {# echo "DOCDB_MASTER_INFO=${DOCDB_MASTER_INFO}"
              echo "DOCDB_INSTANCE_USERNAME=${DOCDB_INSTANCE_USERNAME:0:2}<snip>"
              echo "DOCDB_INSTANCE_PASSWORD=${DOCDB_INSTANCE_PASSWORD:0:2}<snip>"
              echo "SM_AWS_REGION=${SM_AWS_REGION}"
              echo "SM_AWS_ACCESS_KEY_ID=${SM_AWS_ACCESS_KEY_ID:0:2}<snip>"
              echo "SM_AWS_SECRET_ACCESS_KEY=${SM_AWS_SECRET_ACCESS_KEY:0:2}<snip>"
              echo "SECRET_NAME_MONGO=${SECRET_NAME_MONGO}"
              echo
              echo "DOCDB_MASTER_INFO_ESCAPED:"
              echo "${DOCDB_MASTER_INFO_ESCAPED}"

              DOCDB_MASTER_INFO_ESCAPED=${DOCDB_MASTER_INFO//\"/\\\"}
              DOCDB_MASTER_INFO_ESCAPED=${DOCDB_MASTER_INFO_ESCAPED//$'\n'/\\n}
              SECRETS_KEY_SEPERATOR="/"
              export SECRET_NAME_MONGO=${ACCOUNT_ID}${SECRETS_KEY_SEPERATOR}${CLUSTER_ID}${SECRETS_KEY_SEPERATOR}${MAS_INSTANCE_ID}${SECRETS_KEY_SEPERATOR}mongo #}



              {# source /mascli/functions/gitops_utils
              sm_login     
              sm_update_secret $SECRET_NAME_MONGO "{\"info\":\"$DOCDB_MASTER_INFO_ESCAPED\", \"username\":\"$DOCDB_INSTANCE_USERNAME\", \"password\":\"$DOCDB_INSTANCE_PASSWORD\"}" #}

      restartPolicy: Never
      serviceAccountName: sync-sa
  backoffLimit: 4
{{- end }}
