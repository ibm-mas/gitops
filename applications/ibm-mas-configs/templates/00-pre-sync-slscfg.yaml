---
apiVersion: batch/v1
kind: Job
metadata:
  name: "presync-slscfg-{{ .Values.mas_instance_id }}"
  annotations:
    argocd.argoproj.io/hook: PreSync
    hook-delete-policy: before-hook-creation
spec:
  template:
    spec:
      containers:
        - name: config
          image: quay.io/ibmmas/cli:3.14.1-pre.gitops
          imagePullPolicy: Always
          env:
            - name: ARGOCD_NAMESPACE
              value: openshift-gitops
            - name: ARGOCD_APPNAME
              value: "mas-{{ .Values.mas_instance_id}}-core-configs"
            - name: MAS_INSTANCE_ID
              value: "{{ .Values.mas_instance_id}}"
          command:
            - /bin/sh
            - -c
            - |
              echo "INFO: Install Argo CLI."

              # SLS_REGISTRATION_KEY=$(oc get cm sls-suite-registration -n mas-${MAS_INSTANCE_ID}-sls -o jsonpath='{.data.registrationKey}')
              # SLS_CA_CERTIFICATE=$(oc get cm sls-suite-registration -n mas-${MAS_INSTANCE_ID}-sls -o jsonpath='{.data.ca}')
              # argo_route=openshift-gitops-server
              # argo_secret=openshift-gitops-cluster
              # export HOME=/tmp
              # argo_cmd="${HOME}/argocd"
              # result=0
              # argo_url=$(oc get route ${argo_route} -n ${ARGOCD_NAMESPACE} -ojsonpath='{.spec.host}') \
              # && curl -skL "${argo_url}/download/argocd-linux-amd64" -o "${argo_cmd}" \
              # && chmod 755 "${argo_cmd}" \
              # && argo_pwd=$(oc get secret ${argo_secret} -n ${ARGOCD_NAMESPACE} -ojsonpath='{.data.admin\.password}' | base64 -d ; echo ) \
              # && "${argo_cmd}" login "${argo_url}" --username admin --password "${argo_pwd}" --insecure \
              # && "${argo_cmd}" app set "${ARGOCD_APPNAME}" \
              #     --helm-set-string SLS_CA_CERTIFICATE=$SLS_CA_CERTIFICATE --helm-set-string SLS_REGISTRATION_KEY=$SLS_REGISTRATION_KEY\
              # && echo "INFO: ${ARGOCD_APPNAME} successfully updated sls ca and registration key." \
              # || result=1
              # echo "INFO: Application ${ARGOCD_APPNAME} current parameters:"
              # "${argo_cmd}" app get "${ARGOCD_APPNAME}" --show-params
      restartPolicy: Never
  backoffLimit: 4