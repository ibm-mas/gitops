---
apiVersion: v1
kind: Namespace
metadata:
  name: mas-{{ .Values.mas_instance_id }}-core
  annotations:
    argocd.argoproj.io/sync-wave: "-8"
  labels:
    argocd.argoproj.io/managed-by: openshift-gitops

---
kind: Secret
apiVersion: v1
metadata:
  name: aws
  namespace: "mas-{{ .Values.mas_instance_id }}-core"
  annotations:
    argocd.argoproj.io/sync-wave: "-7"
  labels:
    argocd.argoproj.io/managed-by: openshift-gitops
stringData:
  aws_access_key_id: {{ .Values.sm_aws_access_key_id }}
  aws_secret_access_key: {{ .Values.sm_aws_secret_access_key }}
type: Opaque

---
apiVersion: batch/v1
kind: Job
metadata:
  name: efs-presync-role
  namespace: "mas-{{ .Values.mas_instance_id }}-core"
  annotations:
    argocd.argoproj.io/sync-wave: "-6"
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      imagePullSecrets:
        - name: ibm-entitlement
      containers:
        - name: efs
          image: quay.io/ibmmas/cli:7.10.0-pre.mascore1032v2
          imagePullPolicy: Always
          command:
            - /bin/sh
            - -c
            - |

              set -e

              export SM_AWS_ACCESS_KEY_ID=$(cat /etc/mas/creds/aws/aws_access_key_id)
              export SM_AWS_SECRET_ACCESS_KEY=$(cat /etc/mas/creds/aws/aws_secret_access_key)
              sleep 300
              /opt/app-root/src/run-role.sh ocp_efs

          env:
            - name: CLUSTER_NAME
              value: "{{ .Values.cluster_id }}"
            - name: EFS_UNIQUE_ID
              value: "{{ .Values.mas_instance_id }}"
            - name: AWS_DEFAULT_REGION
              value: "{{ .Values.sm_aws_region }}"
          volumeMounts:
            - name: aws
              mountPath: /etc/mas/creds/aws

      restartPolicy: Never
      volumes:
        - name: aws
          secret:
            secretName: aws
            defaultMode: 420
            optional: false
  backoffLimit: 0
