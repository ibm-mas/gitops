#---
#kind: ServiceAccount
#apiVersion: v1
#metadata:
#  annotations:
#    argocd.argoproj.io/hook: PreSync
#  name: presync-sa
#  namespace: "mas-{{ .Values.mas_instance_id }}-core"
#
#---
#kind: ClusterRoleBinding
#apiVersion: rbac.authorization.k8s.io/v1
#metadata:
#  annotations:
#    argocd.argoproj.io/hook: PreSync
#  name: presync-sa-rb
#subjects:
#  - kind: ServiceAccount
#    name: presync-sa
#    namespace: "mas-{{ .Values.mas_instance_id }}-core"
#roleRef:
#  apiGroup: rbac.authorization.k8s.io
#  kind: ClusterRole
#  name: cluster-admin

---
apiVersion: batch/v1
kind: Job
metadata:
  name: efs-presync-role
  #namespace: "mas-{{ .Values.mas_instance_id }}-core"
  namespace: openshift-gitops
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      #imagePullSecrets:
      #  - name: ibm-entitlement
      containers:
        - name: efs
          image: quay.io/ibmmas/cli:7.10.0-pre.mascore1032v2
          imagePullPolicy: Always
          command:
            - /opt/app-root/src/run-role.sh
            - ocp_efs

          env:
            - name: CLUSTER_NAME
              value: "{{ .Values.cluster_id }}"
            - name: EFS_UNIQUE_ID
              value: "{{ .Values.mas_instance_id }}"
            - name: AWS_DEFAULT_REGION
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: aws_default_region
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: aws_secret_access_key
          #volumeMounts:
          #  - name: aws
          #    mountPath: /etc/mas/creds/aws

      restartPolicy: Never
      serviceAccountName: "openshift-gitops-argocd-application-controller"
      #serviceAccountName: "presync-sa"
      #volumes:
      #  - name: aws
      #    secret:
      #      secretName: aws
      #      defaultMode: 420
      #      optional: false
  backoffLimit: 0
