---
apiVersion: batch/v1
kind: Job
metadata:
  name: update-instance-counter-{{ .Values.instance_id }}
  namespace: {{ .Values.argo.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "999"
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: default
      containers:
      - name: update-counter
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          # Get the current count from ConfigMap
          echo "Getting current count from ConfigMap"
          CURRENT_COUNT=$(kubectl get configmap instance-counter -n {{ .Values.argo.namespace }} -o jsonpath='{.data.count}' || echo "0")
          echo "Current count: $CURRENT_COUNT"
          
          # Check if this instance is already counted
          # We'll create a ConfigMap for each instance to track
          INSTANCE_MARKER_NAME="instance-marker-{{ .Values.instance_id }}"
          
          # Check if the marker ConfigMap exists
          if ! kubectl get configmap $INSTANCE_MARKER_NAME -n {{ .Values.argo.namespace }} &>/dev/null; then
            echo "This appears to be a new instance ({{ .Values.instance_id }}). Incrementing counter."
            
            # Increment the counter
            NEW_COUNT=$((CURRENT_COUNT + 1))
            
            # Update the counter ConfigMap
            echo "Updating count from $CURRENT_COUNT to $NEW_COUNT"
            kubectl patch configmap instance-counter -n {{ .Values.argo.namespace }} --type=merge -p "{\"data\":{\"count\":\"$NEW_COUNT\"}}"
            
            # Create a marker ConfigMap for this instance
            echo "Creating marker for instance {{ .Values.instance_id }}"
            kubectl create configmap $INSTANCE_MARKER_NAME -n {{ .Values.argo.namespace }} --from-literal=instance_id="{{ .Values.instance_id }}" --from-literal=provisioned_at="$(date)"
            
            echo "Counter incremented from $CURRENT_COUNT to $NEW_COUNT"
          else
            echo "Instance {{ .Values.instance_id }} already counted. No action needed."
          fi
      restartPolicy: Never
  backoffLimit: 3

# Made with Bob
