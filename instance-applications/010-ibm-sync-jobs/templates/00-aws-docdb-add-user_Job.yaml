{{- if not (empty .Values.docdb) }}
---

# Username of generated user will always be "masinst_${MAS_INSTANCE_ID}"
# Password will be set to whatever is in the acc/cluster/instance/mongo#password secret at time of sync, or generated if the secret is not set
# adler32sum of docdb config is included in job name; this means it will be rerun whenever docdb config changes
# The job is idempotent in cases there the config change is inconsequential (e.g. a cert alias is changed).
# If the config is modified to point to a different docdb instance, the user created in the previous DocDB will not be cleaned up

apiVersion: batch/v1
kind: Job
metadata:
  name: aws-docdb-add-user-{{ .Values.docdb | toYaml | adler32sum }}
  namespace: mas-{{ .Values.instance_id }}-syncres
  annotations:
    argocd.argoproj.io/sync-wave: "00"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
spec:
  template:
    metadata:
      labels:
        app: "sync-job"
{{- if .Values.custom_labels }}
{{ .Values.custom_labels | toYaml | indent 8 }}
{{- end }}
    spec:
      containers:
        - name: aws-docdb-process-user
          image: quay.io/ibmmas/cli:9.4.0-pre.gitops
          imagePullPolicy: IfNotPresent
          env:

            - name: ACCOUNT_ID
              value: "{{ .Values.account_id }}"
            - name: CLUSTER_ID
              value: "{{ .Values.cluster_id }}"
            - name: MAS_INSTANCE_ID
              value: "{{ .Values.instance_id }}"

            - name: DOCDB_MASTER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: aws-docdb
                  key: docdb_master_username
            - name: DOCDB_MASTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aws-docdb
                  key: docdb_master_password
            - name: DOCDB_INSTANCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aws-docdb
                  key: docdb_instance_password
                  optional: true
            - name: DOCDB_MASTER_INFO
              valueFrom:
                secretKeyRef:
                  name: aws-docdb
                  key: docdb_master_info
            - name: SM_AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: aws_default_region
            - name: SM_AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: aws_access_key_id
            - name: SM_AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: aws_secret_access_key

          command:
            - /bin/sh
            - -c
            - |

              set -e


              echo
              echo "================================================================================"
              echo "/opt/app-root/src/run-role.sh aws_documentdb_user"
              echo "================================================================================"

              export MAS_CONFIG_DIR="/tmp/${MAS_INSTANCE_ID}/aws_documentdb_user"
              OUTPUT_FILE=${MAS_CONFIG_DIR}/docdb-${MAS_INSTANCE_ID}-instance-credentials.yml
              export USER_ACTION="add"

              # Grab one of the hosts/ports out of docdb master info
              export DOCDB_HOST=$(echo "${DOCDB_MASTER_INFO}" | sed 's/\\n/\n/g' | sed 's/\\"//g' | /usr/bin/yq '.config.hosts[0].host')
              export DOCDB_PORT=$(echo "${DOCDB_MASTER_INFO}" | sed 's/\\n/\n/g' | /usr/bin/yq '.config.hosts[0].port')

              echo "Params:"
              echo "    - MAS_INSTANCE_ID         ................... ${MAS_INSTANCE_ID}"
              echo "    - MAS_CONFIG_DIR          ................... ${MAS_CONFIG_DIR}"
              echo "    - DOCDB_HOST              ................... ${DOCDB_HOST}"
              echo "    - DOCDB_PORT              ................... ${DOCDB_PORT}"
              echo "    - DOCDB_MASTER_USERNAME   ................... ${DOCDB_MASTER_USERNAME:0:2}<snip>"
              echo "    - DOCDB_MASTER_PASSWORD   ................... ${DOCDB_MASTER_PASSWORD:0:2}<snip>"
              echo "    - DOCDB_INSTANCE_PASSWORD ................... ${DOCDB_INSTANCE_PASSWORD:0:2}<snip>"
              echo "    - USER_ACTION             ................... ${USER_ACTION}"
              echo "    - OUTPUT_FILE             ................... ${OUTPUT_FILE}"
              echo

              mkdir -p ${MAS_CONFIG_DIR}
              /opt/app-root/src/run-role.sh aws_documentdb_user || exit $?

              # The role should have created a file ${OUTPUT_FILE} containing the username/password it applied
              # Read these so we can set the values in the instance's mongo secret in AWS SM
              DOCDB_INSTANCE_USERNAME=$(/usr/bin/yq '.data.docdb_username' $OUTPUT_FILE | base64 -d)
              DOCDB_INSTANCE_PASSWORD=$(/usr/bin/yq '.data.docdb_password' $OUTPUT_FILE | base64 -d)
              
              
              echo 
              echo "================================================================================"
              echo "Updating Instance Mongo Secret"
              echo "================================================================================"

              SECRETS_KEY_SEPERATOR="/"
              SECRET_NAME_MONGO=${ACCOUNT_ID}${SECRETS_KEY_SEPERATOR}${CLUSTER_ID}${SECRETS_KEY_SEPERATOR}${MAS_INSTANCE_ID}${SECRETS_KEY_SEPERATOR}mongo
              DOCDB_MASTER_INFO_ESCAPED=${DOCDB_MASTER_INFO//\"/\\\"}
              DOCDB_MASTER_INFO_ESCAPED=${DOCDB_MASTER_INFO_ESCAPED//$'\n'/\\n}

              echo "Params:"
              echo "    - ACCOUNT_ID                 ................... ${ACCOUNT_ID}"
              echo "    - CLUSTER_ID                 ................... ${CLUSTER_ID}"
              echo "    - MAS_INSTANCE_ID            ................... ${MAS_INSTANCE_ID}"
              echo "    - SECRET_NAME_MONGO          ................... ${SECRET_NAME_MONGO}"
              echo "    - SM_AWS_REGION              ................... ${SM_AWS_REGION}"
              echo "    - SM_AWS_ACCESS_KEY_ID       ................... ${SM_AWS_ACCESS_KEY_ID:0:2}<snip>"
              echo "    - SM_AWS_SECRET_ACCESS_KEY   ................... ${SM_AWS_SECRET_ACCESS_KEY:0:2}<snip>"
              echo "    - DOCDB_INSTANCE_USERNAME    ................... ${DOCDB_INSTANCE_USERNAME:0:2}<snip>"
              echo "    - DOCDB_INSTANCE_PASSWORD    ................... ${DOCDB_INSTANCE_PASSWORD:0:2}<snip>"
              echo "    - DOCDB_MASTER_INFO_ESCAPED  ................... ${DOCDB_MASTER_INFO_ESCAPED}"
              echo
              

              source /mascli/functions/gitops_utils
              sm_login
              sm_update_secret $SECRET_NAME_MONGO "{\"info\":\"$DOCDB_MASTER_INFO_ESCAPED\", \"username\":\"$DOCDB_INSTANCE_USERNAME\", \"password\":\"$DOCDB_INSTANCE_PASSWORD\"}" || exit $?

      restartPolicy: Never
      serviceAccountName: aws-docdb-user-job
  backoffLimit: 4
{{- end }}
