{{- if not (empty .Values.docdb) }}
---

# Deletes user "masinst_${MAS_INSTANCE_ID}" from docdb an deletes the acc/cluster/instance/mongo#password secret from AWS SM

apiVersion: batch/v1
kind: Job
metadata:
  name: aws-docdb-remove-user
  namespace: mas-{{ .Values.instance_id }}-syncres
  annotations:
    argocd.argoproj.io/hook: "PostDelete"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
spec:
  template:
    metadata:
      labels:
        app: "sync-job"
{{- if .Values.custom_labels }}
{{ .Values.custom_labels | toYaml | indent 8 }}
{{- end }}
    spec:
      containers:
        - name: aws-docdb-process-user
          image: quay.io/ibmmas/cli:latest
          imagePullPolicy: IfNotPresent
          env:

            - name: ACCOUNT_ID
              value: "{{ .Values.account_id }}"
            - name: CLUSTER_ID
              value: "{{ .Values.cluster_id }}"
            - name: MAS_INSTANCE_ID
              value: "{{ .Values.instance_id }}"

            - name: DOCDB_MASTER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: aws-docdb
                  key: docdb_master_username
            - name: DOCDB_MASTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aws-docdb
                  key: docdb_master_password
            - name: DOCDB_MASTER_INFO
              valueFrom:
                secretKeyRef:
                  name: aws-docdb
                  key: docdb_master_info

            - name: DOCDB_INSTANCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: aws-docdb
                  key: docdb_instance_username
            - name: DOCDB_INSTANCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aws-docdb
                  key: docdb_instance_password

            - name: SM_AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: aws_default_region
            - name: SM_AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: aws_access_key_id
            - name: SM_AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: aws_secret_access_key

            - name: MAS_WIPE_MONGO_DATA
              value: "{{ .Values.mas_wipe_mongo_data }}"

          command:
            - /bin/sh
            - -c
            - |


              if [[ "${MAS_WIPE_MONGO_DATA}" == "true" ]]; then
                echo
                echo "================================================================================"
                echo "Wiping data from Mongo for MAS instance ${MAS_INSTANCE_ID}"
                echo "================================================================================"

                export ROLE_NAME=mongodb
                export MONGODB_ACTION=destroy-data
                export MONGODB_PROVIDER=aws

                # Map DOCDB_MASTER_INFO YAML into structure expected by destroy-data role
                # Just need to remove the top-level key
                export CONFIG=$(echo "${DOCDB_MASTER_INFO}" | yq '.config' --output-format=json)

                # We seem to permit the "info" attribute of the mongo secret in AWS (DOCDB_MASTER_INFO here) provide certificates either as "certificates" (at the top level), or "config.certificate".
                # There is existing code elsewhere to cope with both alternatives;
                # e.g. https://github.com/ibm-mas/cli/blob/03a9499e6bb433d28ed3f928f92fd0b8ce7f4e73/image/cli/mascli/templates/gitops/appset-configs/cluster/instance/configs/ibm-mas-mongo-config.yaml.j2#L32
                # So this script will also have to allow either to be used
                export CERTIFICATES=$(echo "${DOCDB_MASTER_INFO}" | yq '.certificates // .config.certificate' --output-format=json)

                export MONGO_USERNAME="${DOCDB_INSTANCE_USERNAME}"
                export MONGO_PASSWORD="${DOCDB_INSTANCE_PASSWORD}"

                echo "Params:"
                echo "    - MAS_INSTANCE_ID         ................... ${MAS_INSTANCE_ID}"
                echo "    - ROLE_NAME               ................... ${ROLE_NAME}"
                echo "    - MONGODB_ACTION          ................... ${MONGODB_ACTION}"
                echo "    - MONGODB_PROVIDER        ................... ${MONGODB_PROVIDER}"
                echo "    - MONGO_USERNAME          ................... ${MONGO_USERNAME:0:2}<snip>"
                echo "    - MONGO_PASSWORD          ................... ${MONGO_PASSWORD:0:2}<snip>"
                echo "    - CONFIG                  ................... ${CONFIG}"
                echo "    - CERTIFICATES            ................... ${CERTIFICATES}"

                ansible-playbook ibm.mas_devops.run_role
                rc=$?
                echo "Role mongodb with action destroy-data completed with rc=${rc}"
                [ $rc -ne 0 ] && exit $rc
              fi


              echo
              echo "================================================================================"
              echo "/opt/app-root/src/run-role.sh aws_documentdb_user"
              echo "================================================================================"


              DOCDB_HOST_COUNT=$(echo "${DOCDB_MASTER_INFO}" | sed 's/\\n/\n/g' | sed 's/\\"//g' | yq '.config.hosts  | length')
              while [ ${DOCDB_HOST_COUNT} -gt 0 ]; do
                DOCDB_HOST_COUNT=$((DOCDB_HOST_COUNT-1))
                # Grab hosts/ports from docdb master info
                DOCDB_HOST=$(echo "${DOCDB_MASTER_INFO}" | sed 's/\\n/\n/g' | sed 's/\\"//g' | yq ".config.hosts[$DOCDB_HOST_COUNT].host")
                DOCDB_PORT=$(echo "${DOCDB_MASTER_INFO}" | sed 's/\\n/\n/g' | yq ".config.hosts[$DOCDB_HOST_COUNT].port")
                DOCDB_HOSTS="$DOCDB_HOSTS$DOCDB_HOST:$DOCDB_PORT,"
              done
              # remove trailing comma
              export DOCDB_HOSTS=${DOCDB_HOSTS%,}

              echo "Params:"
              echo "    - MAS_INSTANCE_ID         ................... ${MAS_INSTANCE_ID}"
              echo "    - MAS_CONFIG_DIR          ................... ${MAS_CONFIG_DIR}"
              echo "    - DOCDB_HOST              ................... ${DOCDB_HOST}"
              echo "    - DOCDB_PORT              ................... ${DOCDB_PORT}"
              echo "    - DOCDB_HOSTS             ................... ${DOCDB_HOSTS}"
              echo "    - DOCDB_MASTER_USERNAME   ................... ${DOCDB_MASTER_USERNAME:0:2}<snip>"
              echo "    - DOCDB_MASTER_PASSWORD   ................... ${DOCDB_MASTER_PASSWORD:0:2}<snip>"
              echo "    - DOCDB_INSTANCE_PASSWORD ................... ${DOCDB_INSTANCE_PASSWORD:0:2}<snip>"
              echo "    - USER_ACTION             ................... ${USER_ACTION}"
              echo


              export MAS_CONFIG_DIR="/tmp/${MAS_INSTANCE_ID}/aws_documentdb_user"
              export USER_ACTION="remove"

              mkdir -p ${MAS_CONFIG_DIR}
              /opt/app-root/src/run-role.sh aws_documentdb_user || exit $?

              echo 
              echo "================================================================================"
              echo "Deleting Instance Mongo Secret"
              echo "================================================================================"

              SECRETS_KEY_SEPERATOR="/"
              SECRET_NAME_MONGO=${ACCOUNT_ID}${SECRETS_KEY_SEPERATOR}${CLUSTER_ID}${SECRETS_KEY_SEPERATOR}${MAS_INSTANCE_ID}${SECRETS_KEY_SEPERATOR}mongo

              echo "Params:"
              echo "    - ACCOUNT_ID                 ................... ${ACCOUNT_ID}"
              echo "    - CLUSTER_ID                 ................... ${CLUSTER_ID}"
              echo "    - MAS_INSTANCE_ID            ................... ${MAS_INSTANCE_ID}"
              echo "    - SECRET_NAME_MONGO          ................... ${SECRET_NAME_MONGO}"
              echo "    - SM_AWS_REGION              ................... ${SM_AWS_REGION}"
              echo "    - SM_AWS_ACCESS_KEY_ID       ................... ${SM_AWS_ACCESS_KEY_ID:0:2}<snip>"
              echo "    - SM_AWS_SECRET_ACCESS_KEY   ................... ${SM_AWS_SECRET_ACCESS_KEY:0:2}<snip>"
              echo

              source /mascli/functions/gitops_utils
              sm_login
              sm_delete_secret "${SECRET_NAME_MONGO}" || exit $?

      restartPolicy: Never
      serviceAccountName: aws-docdb-user-job
  backoffLimit: 4
{{- end }}
