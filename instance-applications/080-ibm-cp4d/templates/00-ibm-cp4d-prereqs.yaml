---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: presync-cpd-prereq-sa
  namespace: "{{ .Values.cpd_operators_namespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "081"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: presync-cpd-prereq-role
  annotations:
    argocd.argoproj.io/sync-wave: "081"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
rules:
  - verbs:
      - create
      - delete
      - get
      - list
      - patch
      - scale
      - update
      - watch
    apiGroups:
      - "*"
    resources:
      - "*"

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: presync-cpd-prereq-rb
  annotations:
    argocd.argoproj.io/sync-wave: "082"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
subjects:
  - kind: ServiceAccount
    name: presync-cpd-prereq-sa
    namespace: "{{ .Values.cpd_operators_namespace }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: presync-cpd-prereq-role


---
apiVersion: batch/v1
kind: Job
metadata:
  name: "cpd-prereq-{{ .Values | toYaml | adler32sum }}"
  namespace: "{{ .Values.cpd_operators_namespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "083"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
spec:
  template:
{{- if .Values.custom_labels }}
    metadata:
      labels:
{{ .Values.custom_labels | toYaml | indent 8 }}
{{- end }}
    spec:
      containers:
        - name: run
          image: quay.io/ibmmas/cli:9.0.0-pre.gitops
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          env:
            - name: CPD_OPERATORS_NAMESPACE
              value: {{ .Values.cpd_operators_namespace }}
            - name: CPFS_CHANNEL
              value: {{ .Values.cpfs_channel }}
            - name: CPD_PLATFORM_CHANNEL
              value: {{ .Values.cpd_platform_channel }}
            - name: CPD_PRODUCT_VERSION
              value: {{ .Values.cpd_product_version }}
          command:
            - /bin/sh
            - -c
            - |

              set -e

              echo
              echo "================================================================================"
              echo "Required Cleanup before installing CP4D Platform operator"
              echo "================================================================================"
              
              export CPFS_NAMESPACE=ibm-common-services
              echo
              echo "- Scale down ibm-common-service-operator, operand-deployment-lifecycle-manager and ibm-zen-operator deployments from ibm-common-services namespace (will be recreated when CPFS/ODLM v4 is installed)"
              echo "- Delete common-service operandconfig and operandregistry (will be recreated when ODLM v4 is installed)"
              echo "- Delete all namespace scope instances from ibm-common-services namespace (will be recreated when NamespaceScope v4 is installed)"
              
              echo
              echo
              echo "========================="
              echo "Scaling Deployments"
              echo "========================="
              echo
              echo "scaling down ibm-common-service deployment in ibm-common-services namespace if exists..."

              DEP1=$(oc get deployment ibm-common-service-operator -n ${CPFS_NAMESPACE} --ignore-not-found)
              if [[ ! -z $DEP1 ]]; then
                oc scale deployment ibm-common-service-operator -n ${CPFS_NAMESPACE} --replicas=0
              fi

              echo
              echo "scaling down operand-deployment-lifecycle-manager deployment in ibm-common-services namespace if exists..."

              DEP2=$(oc get deployment operand-deployment-lifecycle-manager -n ${CPFS_NAMESPACE} --ignore-not-found)
              if [[ ! -z $DEP2 ]]; then
                oc scale deployment operand-deployment-lifecycle-manager -n ${CPFS_NAMESPACE} --replicas=0
              fi

              echo
              echo "scaling down ibm-zen-operator deployment in ibm-common-services namespace if exists..."

              DEP3=$(oc get deployment ibm-zen-operator -n ${CPFS_NAMESPACE} --ignore-not-found)
              if [[ ! -z $DEP3 ]]; then
                oc scale deployment ibm-zen-operator -n ${CPFS_NAMESPACE} --replicas=0
              fi

              echo
              echo
              echo "========================="
              echo "Deletion"
              echo "========================="

              echo
              echo "Delete Common Service operandregistry from ibm-common-services namespace if exists..."
              oc delete operandregistry -n ${CPFS_NAMESPACE} --ignore-not-found common-service

              echo
              echo "Delete Common Service operandconfig from ibm-common-services namespace if exists..."
              oc delete operandconfig -n ${CPFS_NAMESPACE} --ignore-not-found common-service

              echo
              echo "Delete Namespace Scope nss-managedby-odlm from ibm-common-services namespace if exists..."
              oc delete namespacescopes.operator.ibm.com nss-managedby-odlm -n ${CPFS_NAMESPACE} --ignore-not-found

              echo
              echo "Delete Namespace Scope odlm-scope-managedby-odlm from ibm-common-services namespace if exists..."
              oc delete namespacescopes.operator.ibm.com odlm-scope-managedby-odlm -n ${CPFS_NAMESPACE} --ignore-not-found

              echo
              echo "Delete Namespace Scope nss-odlm-scope from ibm-common-services namespace if exists..."
              oc delete namespacescopes.operator.ibm.com nss-odlm-scope -n ${CPFS_NAMESPACE} --ignore-not-found

              echo
              echo "Delete Namespace Scope common-service from ibm-common-services namespace if exists..."
              oc delete namespacescopes.operator.ibm.com common-service -n ${CPFS_NAMESPACE} --ignore-not-found

              # function to compare the channel versions
              compare_channels(){
                CH1=$(echo "$1" | tr -d '.')
                CH2=$(echo "$2" | tr -d '.')
                echo $(( $CH1 - $CH2 ))
              }

              echo "Verify that the available channel in the packagemanifests is enough for the product version currently installing"
              export CPFS_AVAILABLE_CHANNEL=$((oc get PackageManifest ibm-common-service-operator -o json) | jq -r '[.status.channels | .[].name] | last | split ("v") | last')

              echo
              echo "Debug:"
              echo "- IBM Foundational Services channel in package manifest ............ v${CPFS_AVAILABLE_CHANNEL}"
              echo "- IBM Foundational Services channel ................................ ${CPFS_CHANNEL}"
              echo "- CP4D Product Verion .............................................. ${CPD_PRODUCT_VERSION}"
              echo

              if [[ ! -z "${CPFS_AVAILABLE_CHANNEL}" ]]; then
                COMPARE=$(compare_channels ${CPFS_AVAILABLE_CHANNEL} ${CPFS_CHANNEL:1})

                if [[ ${COMPARE} -ge 0 ]]; then
                  echo
                  echo "Backup and Delete existing common-service-maps configmap"
                  echo "================================================================================"
                  echo
                  CSM_NAME=$((oc get ConfigMap common-service-maps -n kube-public --ignore-not-found -o json) | jq -r '.metadata.name')

                  if [[ ! -z $CSM_NAME ]]; then
                    BK_CM=$CSM_NAME-bkp-$(date +"%Y-%m-%d-%H-%M-%S")
                    echo "Creating backup config map ${BK_CM}..."
                    BK_OUTPUT=$(oc patch cm common-service-maps -n kube-public -p "{\"metadata\":{ \"name\":\"$BK_CM\" }}" --dry-run=client -o yaml | oc apply -f -)
                    
                    if [[ $BK_OUTPUT == *"created"* ]]; then
                      echo "deleting existing common-service-maps ConfigMap..."
                      oc delete ConfigMap common-service-maps -n kube-public
                    fi

                  fi

                  echo
                  echo "Cleanup old or existing ibm-common-service and cpd-platform operators from ${CPD_OPERATORS_NAMESPACE}"
                  echo "================================================================================"
                  echo

                  OP1=$(oc get Subscription --selector="operators.coreos.com/cpd-platform-operator.${CPD_OPERATORS_NAMESPACE}" -n ${CPD_OPERATORS_NAMESPACE} --ignore-not-found -ojsonpath='{.items[0].spec.channel}')
                  OP2=$(oc get Subscription --selector="operators.coreos.com/ibm-common-service-operator.${CPD_OPERATORS_NAMESPACE}" -n ${CPD_OPERATORS_NAMESPACE} --ignore-not-found -ojsonpath='{.items[0].spec.channel}')
                  if [[ ! -z $OP1 ]]; then
                    COMP1=$(compare_channels ${OP1:1} ${CPD_PLATFORM_CHANNEL:1})
                    if [[ $COMP1 != 0 ]]; then
                      oc delete Subscription --selector="operators.coreos.com/cpd-platform-operator.${CPD_OPERATORS_NAMESPACE}" -n ${CPD_OPERATORS_NAMESPACE} --ignore-not-found
                      oc delete ClusterServiceVersion --selector="operators.coreos.com/cpd-platform-operator.${CPD_OPERATORS_NAMESPACE}" -n ${CPD_OPERATORS_NAMESPACE} --ignore-not-found
                    fi
                  fi

                  if [[ ! -z $OP2 ]]; then
                    COMP2=$(compare_channels ${OP2:1} ${CPFS_CHANNEL:1})
                    if [[ $COMP2 != 0 ]]; then
                      oc delete Subscription --selector="operators.coreos.com/ibm-common-service-operator.${CPD_OPERATORS_NAMESPACE}" -n ${CPD_OPERATORS_NAMESPACE} --ignore-not-found
                      oc delete ClusterServiceVersion --selector="operators.coreos.com/ibm-common-service-operator.${CPD_OPERATORS_NAMESPACE}" -n ${CPD_OPERATORS_NAMESPACE} --ignore-not-found
                    fi
                  fi
                  echo "Done"
                else
                  echo "The channel available in ibm-common-service-operator package manifest (v${CPFS_AVAILABLE_CHANNEL}) is older than the minimum required version ${CPFS_CHANNEL} needed by Cloud Pak for Data ${CPD_PRODUCT_VERSION}!"
                  echo "exiting..."
                  exit 1
                fi
              fi

      restartPolicy: Never
      serviceAccountName: presync-cpd-prereq-sa
  backoffLimit: 4
