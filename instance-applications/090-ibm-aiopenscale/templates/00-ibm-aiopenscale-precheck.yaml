---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: aiopenscale-precheck-sa
  namespace: "{{ .Values.cpd_operators_namespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "090"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aiopenscale-precheck-role-{{ .Values.instance_id }}
  annotations:
    argocd.argoproj.io/sync-wave: "090"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
rules:
  - verbs:
      - get
      - patch
      - create
      - update
    apiGroups:
      - ''
    resources:
      - serviceaccounts
  - verbs:
      - get
      - list
    apiGroups:
      - ''
      - wos.cpd.ibm.com
      - cpd.ibm.com
    resources:
      - secrets
      - woservices
      - ibmcpds

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aiopenscale-precheck-rb-{{ .Values.instance_id }}
  annotations:
    argocd.argoproj.io/sync-wave: "091"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
subjects:
  - kind: ServiceAccount
    name: aiopenscale-precheck-sa
    namespace: "{{ .Values.cpd_operators_namespace }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aiopenscale-precheck-role-{{ .Values.instance_id }}


---
apiVersion: batch/v1
kind: Job
metadata:
  name: "cpd-aiopenscale-precheck-{{ .Values | toYaml | adler32sum }}"
  namespace: "{{ .Values.cpd_operators_namespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "092"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
spec:
  template:
{{- if .Values.custom_labels }}
    metadata:
      labels:
{{ .Values.custom_labels | toYaml | indent 8 }}
{{- end }}
    spec:
      containers:
        - name: run
          image: quay.io/ibmmas/cli:9.0.0-pre.gitops
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          env:
            - name: CPD_INSTANCE_NAMESPACE
              value: {{ .Values.cpd_instance_namespace }}
          command:
            - /bin/sh
            - -c
            - |

              set -e
              echo
              echo "================================================================================"
              echo "Check that ibmcpd-cr is ready"
              echo "================================================================================"

              echo
              echo "Checking if controlPlaneStatus is complete..."

              IBMCPD_LOOKUP=$(oc get Ibmcpd ibmcpd-cr -n ${CPD_INSTANCE_NAMESPACE} -o jsonpath='{.status.controlPlaneStatus}')
              if [[ ! -z ${IBMCPD_LOOKUP} && ${IBMCPD_LOOKUP} == *"Completed"* ]]; then
                echo "ibmcpd controlPlaneStatus is complete and ready for services install"
              else
                echo "Failed! IBM Cloud Pak for Data must be ready and successfully installed before installing any CloudPak for Data service."
                echo "Current IBM Cloud Pak for Data installation status is ${IBMCPD_LOOKUP}"
                echo "exiting..."
                exit 1
              fi
          
      restartPolicy: Never
      serviceAccountName: aiopenscale-precheck-sa
  backoffLimit: 4