---
apiVersion: batch/v1
kind: Job
metadata:
  name: "cpd-aiopenscal-post-verify-{{ .Values | toYaml | adler32sum }}"
  namespace: "{{ .Values.cpd_operators_namespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "096"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
spec:
  template:
{{- if .Values.custom_labels }}
    metadata:
      labels:
{{ .Values.custom_labels | toYaml | indent 8 }}
{{- end }}
    spec:
      containers:
        - name: run
          image: quay.io/ibmmas/cli:9.0.0-pre.gitops
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          env:
            - name: CPD_INSTANCE_NAMESPACE
              value: {{ .Values.cpd_instance_namespace }}
          command:
            - /bin/sh
            - -c
            - |

              set -e
              echo
              echo "================================================================================"
              echo "Waiting for Watson Openscale to be completed
              echo "================================================================================"
              echo
              
              echo
              echo "Waiting for openscale-defaultinstance cr to be ready..."

              wait_period=0
              while true; do
                wait_period=$(($wait_period+60))
                if [ $wait_period -gt 1800 ]; then
                  echo "Watson Openscale Cr is not ready after 30 minutes of waiting. exiting..."
                  exit 1
                else
                  sleep 60
                fi

                WOS_CR_LOOKUP=$(oc get WOService openscale-defaultinstance -n $CPD_INSTANCE_NAMESPACE --ignore-not-found)
                if [[ ! -z $WOS_CR_LOOKUP ]]; then
                  echo "Watson Openscale Cr is available"
                  break
                fi
              done

              echo "Waiting for wosStatus to be 'Completed'..."

              wait_period=0
              while true; do
                wait_period=$(($wait_period+120))
                if [ $wait_period -gt 10800 ]; then
                  echo "wosStatus is not complete after 3 hours of waiting. Exiting..."
                  exit 1
                else
                  sleep 120
                fi

                WOSSTATUS_LOOKUP=$(oc get WOService openscale-defaultinstance -n ${CPD_INSTANCE_NAMESPACE} -o jsonpath='{.status.wosStatus}')
                if [[ ! -z ${WOSSSTATUS_LOOKUP} && ${WOSSTATUS_LOOKUP} == *"Completed"* ]]; then
                  echo "Watson Openscale is complete"
                  break
                fi
              done     

      restartPolicy: Never
      serviceAccountName: aiopenscale-precheck-sa
  backoffLimit: 4