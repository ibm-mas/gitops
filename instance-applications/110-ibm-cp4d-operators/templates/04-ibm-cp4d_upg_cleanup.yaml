---
# this job cleans up existing operators that might cause the cp4d upgrade to fail in the case of an upgrade.
# If the operators exist but are the expected versions, nothing will be done by this job. 
# The checks will be done and if nothing needs to change, nothing will be done
# This functionality was copied from https://github.com/ibm-mas/ansible-devops/blob/master/ibm/mas_devops/roles/cp4d/tasks/prereqs/install-cpfs.yml
# and runs for 4.8 and up CP4D product versions

apiVersion: batch/v1
kind: Job
metadata:
  name: "cpd-upg-cleanup-v1-{{ .Values | toYaml | adler32sum }}"
  namespace: "{{ .Values.cpd_operators_namespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "086"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
spec:
  template:
{{- if .Values.custom_labels }}
    metadata:
      labels:
{{ .Values.custom_labels | toYaml | indent 8 }}
{{- end }}
    spec:
      containers:
        - name: run
          image: quay.io/ibmmas/cli:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          env:
            - name: CPD_OPERATORS_NAMESPACE
              value: {{ .Values.cpd_operators_namespace }}
            - name: CPFS_CHANNEL
              value: {{ .Values.cpfs_channel }}
            - name: CPD_PLATFORM_CHANNEL
              value: {{ .Values.cpd_platform_channel }}
            - name: CPD_PRODUCT_VERSION
              value: {{ .Values.cpd_product_version }}
          command:
            - /bin/sh
            - -c
            - |

              set -e

              # function to compare the channel versions
              compare_channels(){
                CH1=$(echo "$1" | tr -d '.')
                CH2=$(echo "$2" | tr -d '.')
                echo $(( $CH1 - $CH2 ))
              }

              # Verify that the available channel for common service operator is enough for the given product version
              echo "Verify that the available channel in the packagemanifests is enough for the product version currently installing"
              export CPFS_AVAILABLE_CHANNEL=$((oc get PackageManifest ibm-common-service-operator -o json) | jq -r '[.status.channels | .[].name] | last | split ("v") | last')

              echo
              echo "============"
              echo "Debug:"
              echo "============"
              echo "- IBM Foundational Services channel in package manifest ............. v${CPFS_AVAILABLE_CHANNEL}"
              echo "- IBM Foundational Services channel ................................. ${CPFS_CHANNEL}"
              echo "- CP4D Product Version .............................................. ${CPD_PRODUCT_VERSION}"
              echo

              # Check available channels against the expected channel that would be installed
              if [[ ! -z "${CPFS_AVAILABLE_CHANNEL}" ]]; then
                COMPARE=$(compare_channels ${CPFS_AVAILABLE_CHANNEL} ${CPFS_CHANNEL:1})

                if [[ ${COMPARE} -ge 0 ]]; then
                  echo
                  echo "Backup and Delete existing common-service-maps configmap"
                  echo "================================================================================"
                  echo
                  CSM_NAME=$((oc get ConfigMap common-service-maps -n kube-public --ignore-not-found -o json) | jq -r '.metadata.name')

                  if [[ ! -z $CSM_NAME ]]; then
                    BK_CM=$CSM_NAME-bkp-$(date +"%Y-%m-%d-%H-%M-%S")
                    echo "Creating backup config map ${BK_CM}..."
                    BK_OUTPUT=$(oc patch cm common-service-maps -n kube-public -p "{\"metadata\":{ \"name\":\"$BK_CM\" }}" --dry-run=client -o yaml | oc apply -f -)
                    
                    if [[ $BK_OUTPUT == *"created"* ]]; then
                      echo "deleting existing common-service-maps ConfigMap..."
                      oc delete ConfigMap common-service-maps -n kube-public
                    fi

                  fi
                  
                  echo
                  echo "Cleanup old or existing cp4d operators from ${CPD_OPERATORS_NAMESPACE}"
                  echo "================================================================================"
                  echo

                  # Remove old or existing version of cpd-platform and ibm-common-service operators if their channels do not match the expected channel
                  OP1=$(oc get Subscription --selector="operators.coreos.com/cpd-platform-operator.${CPD_OPERATORS_NAMESPACE}" -n ${CPD_OPERATORS_NAMESPACE} --ignore-not-found -ojsonpath='{.items[0].spec.channel}')
                  OP2=$(oc get Subscription --selector="operators.coreos.com/ibm-common-service-operator.${CPD_OPERATORS_NAMESPACE}" -n ${CPD_OPERATORS_NAMESPACE} --ignore-not-found -ojsonpath='{.items[0].spec.channel}')
                  if [[ ! -z $OP1 ]]; then
                    COMP1=$(compare_channels ${OP1:1} ${CPD_PLATFORM_CHANNEL:1})
                    echo "============"
                    echo "Debug:"
                    echo "============"
                    echo "- IBM CP4D Platform channel installed ............ ${OP1}"
                    echo "- IBM CP4D Platform channel expected  ............ ${CPD_PLATFORM_CHANNEL}"
              
                    if [[ $COMP1 != 0 ]]; then
                      oc delete Subscription --selector="operators.coreos.com/cpd-platform-operator.${CPD_OPERATORS_NAMESPACE}" -n ${CPD_OPERATORS_NAMESPACE} --ignore-not-found
                      oc delete ClusterServiceVersion --selector="operators.coreos.com/cpd-platform-operator.${CPD_OPERATORS_NAMESPACE}" -n ${CPD_OPERATORS_NAMESPACE} --ignore-not-found
                    fi
                  fi

                  if [[ ! -z $OP2 ]]; then
                    COMP2=$(compare_channels ${OP2:1} ${CPFS_CHANNEL:1})
                    echo "============"
                    echo "Debug:"
                    echo "============"
                    echo "- IBM CPFS channel installed ............ ${OP2}"
                    echo "- IBM CPFS channel expected  ............ ${CPFS_CHANNEL}"

                    if [[ $COMP2 != 0 ]]; then
                      oc delete Subscription --selector="operators.coreos.com/ibm-common-service-operator.${CPD_OPERATORS_NAMESPACE}" -n ${CPD_OPERATORS_NAMESPACE} --ignore-not-found
                      oc delete ClusterServiceVersion --selector="operators.coreos.com/ibm-common-service-operator.${CPD_OPERATORS_NAMESPACE}" -n ${CPD_OPERATORS_NAMESPACE} --ignore-not-found
                    fi
                  fi
                  echo "Done"
                else
                  echo "The channel available in ibm-common-service-operator package manifest (v${CPFS_AVAILABLE_CHANNEL}) is older than the minimum required version ${CPFS_CHANNEL} needed by Cloud Pak for Data ${CPD_PRODUCT_VERSION}!"
                  echo "exiting..."
                  exit 1
                fi
              fi

      restartPolicy: Never
      serviceAccountName: cpd-sa
  backoffLimit: 4

