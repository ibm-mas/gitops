# This job runs for CP4D version 5.0.0 and up. It precreates or patches the ibm-mcs-* Service Accounts with
# ibm-entitlement pull secret which is required to pull images for the various corresponding deployments that will
# run later during the installation. This job will not run when cpd_product_version is less than 5.0.0

{{- if .Values.cpd_product_version }}
{{- if le (semver .Values.cpd_product_version | (semver "5.0.0").Compare) 0 }}

{{- /*
Meaningful prefix for the job resource name. Must be under 52 chars in length to leave room for the 11 chars reserved for '-' and $_job_hash.
*/}}
{{- $_job_name_prefix := "cpd-mcs-sa-patch-job" }}

{{- /*
Use the build/bin/set-cli-image-digest.sh script to update this value across all charts.
Included in $_job_hash (see below).
*/}}
{{- $_cli_image_digest := "sha256:b3ecce096368c967bbc6bac2f074473a65418462417b6e550ad4777427c3b06b" }}

{{- /*
A dict of values that influence the behaviour of the job in some way.
Any changes to values in this dict will trigger a rerun of the job.
Since jobs must be idemopotent, it's generally safe to pass in values here that are not
strictly necessary (i.e. including some values that don't actually influence job behaviour).
We may want to refine this further though for jobs that can take a long time to complete.
Included in $_job_hash (see below).
*/}}
{{- $_job_config_values := omit .Values "junitreporter" }}

{{- /*
Increment this value whenever you make a change to an immutable field of the Job resource.
E.g. passing in a new environment variable.
Included in $_job_hash (see below).
*/}}
{{- $_job_version := "v2" }}

{{- /*
10 char hash appended to the job name taking into account $_job_config_values, $_job_version and $_cli_image_digest
This is to ensure ArgoCD will create a new job resource intead of attempting (and failing) to update an
immutable field of any existing Job resource.
*/}}
{{- $_job_hash := print ($_job_config_values | toYaml) $_cli_image_digest $_job_version | adler32sum }}

{{- $_job_name := join "-" (list $_job_name_prefix $_job_hash )}}

{{- /*
Set as the value for the mas.ibm.com/job-cleanup-group label on the Job resource.

When the auto_delete flag is not set on the root application, a CronJob in the cluster uses this label 
to identify old Job resources that should be pruned on behalf of ArgoCD.

Any Job resources in the same namespace that have the mas.ibm.com/job-cleanup-group with this value
will be considered to belong to the same cleanup group. All but the most recent (i.e. with the latest "creation_timestamp")
Jobs will be automatically deleted.

$_job_cleanup_group can usually just be based on $_job_name_prefix. There are some special cases
where multiple Jobs are created in our templates using a Helm loop. In those cases, additional descriminators
must be added to $_job_cleanup_group.

By convention, we sha1sum this value to guarantee we never exceed the 63 char limit regardless of which discriminators
are required here.

*/}}
{{- $_job_cleanup_group := cat $_job_name_prefix | sha1sum }}

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $_job_name }}
  namespace: "{{ .Values.cpd_operators_namespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "084"
  labels:
    mas.ibm.com/job-cleanup-group: {{ $_job_cleanup_group }}
{{- if .Values.custom_labels }}
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
spec:
  template:
{{- if .Values.custom_labels }}
    metadata:
      labels:
{{ .Values.custom_labels | toYaml | indent 8 }}
{{- end }}
    spec:
      containers:
        - name: run
          image: quay.io/ibmmas/cli@{{ $_cli_image_digest }}
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          env:
            - name: CPD_INSTANCE_NAMESPACE
              value: {{ .Values.cpd_instance_namespace }}
          command:
            - /bin/sh
            - -c
            - |

              set -e
              echo
              echo "================================================================================"
              echo "Provide ibm-entitlement-key image pull secret for mcs service accounts"
              echo "================================================================================"
              echo

              # ibm-mcs-hubwork-sa
              RESOURCE_NAME=$(oc get serviceaccount ibm-mcs-hubwork-sa -n ${CPD_INSTANCE_NAMESPACE} -o=jsonpath="{.metadata.name}" --ignore-not-found)
              if [[ -z "${RESOURCE_NAME}" ]]; then
                echo "creating ibm-mcs-hubwork sa..."
                oc create serviceaccount ibm-mcs-hubwork-sa -n ${CPD_INSTANCE_NAMESPACE}
              fi

              echo "patching ibm-mcs-hubwork sa..."
              oc patch serviceaccount ibm-mcs-hubwork-sa -n ${CPD_INSTANCE_NAMESPACE} -p '{"imagePullSecrets":[{"name":"ibm-entitlement-key"}]}'

              # ibm-mcs-placement-sa
              RESOURCE_NAME=$(oc get serviceaccount ibm-mcs-placement-sa -n ${CPD_INSTANCE_NAMESPACE} -o=jsonpath="{.metadata.name}" --ignore-not-found)
              if [[ -z "${RESOURCE_NAME}" ]]; then
                echo "creating ibm-mcs-placement sa..."
                oc create serviceaccount ibm-mcs-placement-sa -n ${CPD_INSTANCE_NAMESPACE}
              fi

              echo "patching ibm-mcs-placement sa..."
              oc patch serviceaccount ibm-mcs-placement-sa -n ${CPD_INSTANCE_NAMESPACE} -p '{"imagePullSecrets":[{"name":"ibm-entitlement-key"}]}'

              # ibm-mcs-storage-sa
              RESOURCE_NAME=$(oc get serviceaccount ibm-mcs-storage-sa -n ${CPD_INSTANCE_NAMESPACE} -o=jsonpath="{.metadata.name}" --ignore-not-found)
              if [[ -z "${RESOURCE_NAME}" ]]; then
                echo "creating ibm-mcs-storage sa..."
                oc create serviceaccount ibm-mcs-storage-sa -n ${CPD_INSTANCE_NAMESPACE}
              fi

              echo "patching ibm-mcs-storage sa..."
              oc patch serviceaccount ibm-mcs-storage-sa -n ${CPD_INSTANCE_NAMESPACE} -p '{"imagePullSecrets":[{"name":"ibm-entitlement-key"}]}'

              echo "Done"

      restartPolicy: Never
      serviceAccountName: cpd-sa
  backoffLimit: 4

{{- end }}
{{- end }}