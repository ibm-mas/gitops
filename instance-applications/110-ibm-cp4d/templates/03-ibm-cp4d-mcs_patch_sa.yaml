# This job runs for CP4D version 5.0.0 and up. It precreates or patches the ibm-mcs-* Service Accounts with
# ibm-entitlement pull secret which is required to pull images for the various corresponding deployments that will
# run later during the installation. This job will not run when cpd_product_version is less than 5.0.0

{{- if .Values.cpd_product_version }}
{{- if le (semver .Values.cpd_product_version | (semver "5.0.0").Compare) 0 }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "cpd-mcs-sa-patch-job-v1-{{ .Values | toYaml | adler32sum }}"
  namespace: "{{ .Values.cpd_operators_namespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "084"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
spec:
  template:
{{- if .Values.custom_labels }}
    metadata:
      labels:
{{ .Values.custom_labels | toYaml | indent 8 }}
{{- end }}
    spec:
      containers:
        - name: run
          image: quay.io/ibmmas/cli:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          env:
            - name: CPD_INSTANCE_NAMESPACE
              value: {{ .Values.cpd_instance_namespace }}
          command:
            - /bin/sh
            - -c
            - |

              set -e
              echo
              echo "================================================================================"
              echo "Provide ibm-entitlement-key image pull secret for mcs service accounts"
              echo "================================================================================"
              echo

              # ibm-mcs-hubwork-sa
              RESOURCE_NAME=$(oc get serviceaccount ibm-mcs-hubwork-sa -n ${CPD_INSTANCE_NAMESPACE} -o=jsonpath="{.metadata.name}" --ignore-not-found)
              if [[ -z "${RESOURCE_NAME}" ]]; then
                echo "creating ibm-mcs-hubwork sa..."
                oc create serviceaccount ibm-mcs-hubwork-sa -n ${CPD_INSTANCE_NAMESPACE}
              fi

              echo "patching ibm-mcs-hubwork sa..."
              oc patch serviceaccount ibm-mcs-hubwork-sa -n ${CPD_INSTANCE_NAMESPACE} -p '{"imagePullSecrets":[{"name":"ibm-entitlement-key"}]}'

              # ibm-mcs-placement-sa
              RESOURCE_NAME=$(oc get serviceaccount ibm-mcs-placement-sa -n ${CPD_INSTANCE_NAMESPACE} -o=jsonpath="{.metadata.name}" --ignore-not-found)
              if [[ -z "${RESOURCE_NAME}" ]]; then
                echo "creating ibm-mcs-placement sa..."
                oc create serviceaccount ibm-mcs-placement-sa -n ${CPD_INSTANCE_NAMESPACE}
              fi

              echo "patching ibm-mcs-placement sa..."
              oc patch serviceaccount ibm-mcs-placement-sa -n ${CPD_INSTANCE_NAMESPACE} -p '{"imagePullSecrets":[{"name":"ibm-entitlement-key"}]}'

              # ibm-mcs-storage-sa
              RESOURCE_NAME=$(oc get serviceaccount ibm-mcs-storage-sa -n ${CPD_INSTANCE_NAMESPACE} -o=jsonpath="{.metadata.name}" --ignore-not-found)
              if [[ -z "${RESOURCE_NAME}" ]]; then
                echo "creating ibm-mcs-storage sa..."
                oc create serviceaccount ibm-mcs-storage-sa -n ${CPD_INSTANCE_NAMESPACE}
              fi

              echo "patching ibm-mcs-storage sa..."
              oc patch serviceaccount ibm-mcs-storage-sa -n ${CPD_INSTANCE_NAMESPACE} -p '{"imagePullSecrets":[{"name":"ibm-entitlement-key"}]}'

              echo "Done"

      restartPolicy: Never
      serviceAccountName: cpd-sa
  backoffLimit: 4

{{- end }}
{{- end }}