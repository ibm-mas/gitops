
# {{ $ns := "openshift-operators"}}
# {{ $role_name  :=  "odh-installplan-ra" }}
# {{ $sa_name    :=  "odh-installplan-sa" }}
# {{ $rb_name    :=  "odh-installplan-rb" }}

# ---
# kind: ServiceAccount
# apiVersion: v1
# metadata:
#   name: {{ $sa_name }}
#   namespace: {{ $ns }}
#   annotations:
#     argocd.argoproj.io/sync-wave: "123"
# {{- if .Values.custom_labels }}
#   labels:
# {{ .Values.custom_labels | toYaml | indent 4 }}
# {{- end }}

# ---
# kind: Role
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
#   name: {{ $role_name }}
#   annotations:
#     argocd.argoproj.io/sync-wave: "124"
# {{- if .Values.custom_labels }}
#   labels:
# {{ .Values.custom_labels | toYaml | indent 4 }}
# {{- end }}
# rules:
#   - verbs:
#       - patch
#     resources:
#       - installplan

# ---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   annotations:
#     argocd.argoproj.io/sync-wave: "125"
#   namespace: "{{ $ns }}"
#   name: "odh-installplan"
#   labels:
#     app: "odh-installplan"
# {{- if .Values.custom_labels }}
# {{ .Values.custom_labels | toYaml | indent 4 }}
# {{- end }}
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: Role
#   name: "odh-installplan"
# subjects:
#   - apiGroup: ""
#     kind: ServiceAccount
#     name: "odh-installplan"
#     namespace: {{ $ns }}

---
apiVersion: batch/v1
kind: Job
metadata:
  name: installplan-patch
  namespace: {{ .Values.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "126"
spec:
  template:
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
        - name: Installplan-job
          image: quay.io/ibmmas/cli:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          command:
            - /bin/sh
            - -c
            - |
              clusterServiceVersionNames=$(oc get installplan -n {{ .Values.namespace | default "openshift-operators" }} -o json | jq -r '.items[] | select(.spec.clusterServiceVersionNames[] | contains("{{ .Values.odhOperatorVersion }}")) | .metadata.name')
              if [ -n "$clusterServiceVersionNames" ]; then
                oc patch installplan $clusterServiceVersionNames -n {{ .Values.namespace | default "openshift-operators" }} --type merge --patch '{"spec":{"approved":true}}'
                echo "InstallPlan $clusterServiceVersionNames approved successfully."
              else
                echo "No InstallPlan found for {{ .Values.odhOperatorVersion }}."
                exit 1
              fi
      restartPolicy: OnFailure
