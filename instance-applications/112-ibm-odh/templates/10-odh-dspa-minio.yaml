{{- if eq .Values.mas_aibroker_storage_provider "minio" }}
apiVersion: v1
kind: Secret
metadata:
  name: ds-pipeline-s3-instance
  namespace: "{{ .Values.aibroker_namespace }}"
  labels:
    opendatahub.io/dashboard: "false"
    opendatahub.io/managed: "true"
  annotations:
    argocd.argoproj.io/sync-wave: "132"
    opendatahub.io/connection-type: s3
    openshift.io/display-name: Minio Data Connection
stringData:
  accesskey: "{{ .Values.mas_aibroker_storage_accesskey }}"
  secretkey: "{{ .Values.mas_aibroker_storage_secretkey }}"
  host: "{{ .Values.mas_aibroker_storage_host }}"
  port: "{{ .Values.mas_aibroker_storage_port }}"
  ssl: "{{ .Values.mas_aibroker_storage_ssl }}"
---
apiVersion: datasciencepipelinesapplications.opendatahub.io/v1alpha1
kind: DataSciencePipelinesApplication
metadata:
  name: instance
  namespace: "{{ .Values.aibroker_namespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "135"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  dspVersion: v1
  database:
    disableHealthCheck: true
    customExtraParams: '{"tls":"false"}'
    externalDB:
      host: "{{ .Values.mas_aibroker_db_host }}"
      port: "{{ .Values.mas_aibroker_db_port }}"
      username: "{{ .Values.mas_aibroker_db_user }}"
      pipelineDBName: "{{ .Values.mas_aibroker_db_database }}"
      passwordSecret:
        name: "{{ .Values.mas_aibroker_db_secret_name }}"
        key: password

  objectStorage:
    disableHealthCheck: true
    externalStorage:
      host: "{{ .Values.mas_aibroker_storage_host }}"
      port: "{{ .Values.mas_aibroker_storage_port }}"
      bucket: "{{ .Values.mas_aibroker_storage_pipelines_bucket }}"
      storageClassName: "{{ .Values.primary_storage_class }}"
      s3CredentialsSecret:
        accessKey: accesskey
        secretKey: secretkey
        secretName: ds-pipeline-s3-instance
      scheme: http

{{- end }}