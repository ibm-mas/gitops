---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: km-s3-secret
  namespace: "{{ .Values.aibroker_namespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "161"
    {{- if eq .Values.mas_aibroker_storage_provider "aws" }}
    serving.kserve.io/s3-endpoint: "{{ .Values.mas_aibroker_storage_host }}"
    {{- else if eq .Values.mas_aibroker_storage_provider "minio" }}
    serving.kserve.io/s3-endpoint: "{{ .Values.mas_aibroker_storage_host }}:{{ .Values.mas_aibroker_storage_port }}"
    {{- end }}
    {{- if eq .Values.mas_aibroker_storage_ssl "false" }}
    serving.kserve.io/s3-usehttps: "0"
    {{- else }}
    serving.kserve.io/s3-usehttps: "1"
    {{- end }}
    {{- if and (eq .Values.mas_aibroker_storage_provider "minio") (not .Values.mas_aibroker_storage_region | empty) }}
    serving.kserve.io/s3-region: "{{ .Values.mas_aibroker_storage_region }}"
    {{- end }}
stringData:
  AWS_ACCESS_KEY_ID: "{{ .Values.mas_aibroker_storage_accesskey}}"
  AWS_SECRET_ACCESS_KEY: "{{ .Values.mas_aibroker_storage_secretkey}}"
  S3_ACCESS_KEY: "{{ .Values.mas_aibroker_storage_accesskey}}"
  S3_SECRET_KEY: "{{ .Values.mas_aibroker_storage_secretkey}}"
  S3_HOST: "{{ .Values.mas_aibroker_storage_host}}"
  S3_PORT: "{{ .Values.mas_aibroker_storage_port}}"
  S3_REGION: "{{ .Values.mas_aibroker_storage_region}}"
  #S3_SSL: "{{ .Values.mas_aibroker_storage_ssl}}"
  S3_SSL: "false"
