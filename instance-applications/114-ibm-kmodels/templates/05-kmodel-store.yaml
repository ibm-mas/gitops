---
apiVersion: v1
kind: ConfigMap
metadata:
  name: km-store
  namespace: "{{ .Values.aibroker_namespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "169"
  labels:
    app: km-store
data:
  STORE_BUCKET: "{{ .Values.mas_aibroker_storage_templates_bucket }}"
  # Certificate files folder (default: /etc/ssl/certs)
  CERTS_PATH: "/etc/ssl/certs"
  # Private key (default: tls.key)
  CERT_PRIVATE_KEY: "tls.key"
  # Public certificate (default: tls.crt)
  CERT_PUBLIC_CERTIFICATE: "tls.crt"
  # Set to true to enable https server (default: true)
  SUPPORT_HTTPS: "true"

---
apiVersion: v1
kind: Service
metadata:
  name: km-store
  namespace: "{{ .Values.aibroker_namespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "170"
spec:
  ports:
    - name: https
      port: 8443
      targetPort: https
  selector:
    app: km-store
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: km-store
  namespace: "{{ .Values.aibroker_namespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "171"
  labels:
    app: km-store
    component: store
    kmodels: instance
    part-of: kmodels
spec:
  replicas: 1
  selector:
    matchLabels:
      app: km-store
      kmodels: instance
      part-of: kmodels
  template:
    metadata:
      labels:
        app: km-store
        component: store
        kmodels: instance
        part-of: kmodels
    spec:
      restartPolicy: Always
      volumes:
        - name: ssh-key
          secret:
            secretName: "{{ .Values.aibroker_internal_tls }}"
        - name: workspace-volume
          emptyDir: {}
      imagePullSecrets:
        - name: "{{ .Values.pullSecretName }}"
      containers:
        - name: store
          image: "{{ .Values.image_store }}"
          #image: "docker-na-public.artifactory.swg-devops.com/wiotp-docker-local/aibroker/store:1.0.7"
          imagePullPolicy: Always
          securityContext:
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            privileged: false
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
          ports:
            - name: http
              containerPort: 3000
            - name: https
              containerPort: 8443
          envFrom:
            - configMapRef:
                name: km-store
            - secretRef:
                name: km-s3-secret
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
              ephemeral-storage: "1Gi"
            limits:
              memory: "256Mi"
              cpu: "100m"
              ephemeral-storage: "2Gi"
          livenessProbe:
            httpGet:
              path: /version
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 500
          readinessProbe:
            httpGet:
              path: /version
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 500
          volumeMounts:
            - mountPath: "/etc/ssl/certs"
              name: ssh-key
              readOnly: true
            - name: workspace-volume
              mountPath: /workspace
