---
apiVersion: v1
kind: Namespace
metadata:
  name: "{{ .Values.tenantNamespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "289"

---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: km-s3-secret
  namespace: "{{ .Values.tenantNamespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "299"
    {{- if eq .Values.mas_aibroker_storage_provider "aws" }}
    serving.kserve.io/s3-endpoint: "{{ .Values.mas_aibroker_storage_host }}"
    {{- else if eq .Values.mas_aibroker_storage_provider "minio" }}
    serving.kserve.io/s3-endpoint: "{{ .Values.mas_aibroker_storage_host }}:{{ .Values.mas_aibroker_storage_port }}"
    {{- end }}
    {{- if eq .Values.mas_aibroker_storage_ssl "false" }}
    serving.kserve.io/s3-usehttps: "0"
    {{- else }}
    serving.kserve.io/s3-usehttps: "1"
    {{- end }}
    {{- if and (eq .Values.mas_aibroker_storage_provider "minio") (not .Values.mas_aibroker_storage_region | empty) }}
    serving.kserve.io/s3-region: "{{ .Values.mas_aibroker_storage_region }}"
    {{- end }}
stringData:
  AWS_ACCESS_KEY_ID: "{{ .Values.mas_aibroker_storage_accesskey}}"
  AWS_SECRET_ACCESS_KEY: "{{ .Values.mas_aibroker_storage_secretkey}}"
  S3_ACCESS_KEY: "{{ .Values.mas_aibroker_storage_accesskey}}"
  S3_SECRET_KEY: "{{ .Values.mas_aibroker_storage_secretkey}}"
  S3_HOST: "{{ .Values.mas_aibroker_storage_host}}"
  S3_PORT: "{{ .Values.mas_aibroker_storage_port}}"
  S3_REGION: "{{ .Values.mas_aibroker_storage_region}}"
  S3_SSL: "{{ .Values.mas_aibroker_storage_ssl}}"

---

kind: Secret
apiVersion: v1
metadata:
  name: ibm-entitlement
  namespace: "{{ .Values.tenantNamespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "300"
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: "eyJhdXRocyI6eyAiZG9ja2VyLW5hLXB1YmxpYy5hcnRpZmFjdG9yeS5zd2ctZGV2b3BzLmNvbS93aW90cC1kb2NrZXItbG9jYWwiOnsidXNlcm5hbWUiOiJZOUJCRk04NjZAbm9tYWlsLnJlbGF5LmlibS5jb20iLCJwYXNzd29yZCI6ImNtVm1kR3R1T2pBeE9qRTNOVGd3T0RnM016TTZObEpoVVRreWFreE9jWEpJYUV4Uk1sTmxlRVpTUWxKQlVXUjEiLCJhdXRoIjoiV1RsQ1FrWk5PRFkyUUc1dmJXRnBiQzV5Wld4aGVTNXBZbTB1WTI5dE9tTnRWbTFrUjNSMVQycEJlRTlxUlROT1ZHZDNUMFJuTTAxNlRUWk9iRXBvVlZScmVXRnJlRTlqV0VwSllVVjRVazFzVG14bFJWcFRVV3hLUWxWWFVqRT0ifSwgImNwLmljci5pby9jcCI6eyJ1c2VybmFtZSI6ImNwIiwicGFzc3dvcmQiOiJleUpoYkdjaU9pSklVekkxTmlKOS5leUpwYzNNaU9pSkpRazBnVFdGeWEyVjBjR3hoWTJVaUxDSnBZWFFpT2pFMU9EVXpPRGN3TmpVc0ltcDBhU0k2SW1KaFpUZ3laR0prTkRJNU16Um1OalZpWWprelptSTNNMlF6TlRCak1tSTBJbjAuQmxaNG1nTnlnSmFKY2ZpODQ4VmprdU9GMElDZkpocndOOFNzZS03TmFNRSIsImF1dGgiOiJZM0E2WlhsS2FHSkhZMmxQYVVwSlZYcEpNVTVwU2prdVpYbEtjR016VFdsUGFVcEtVV3N3WjFSWFJubGhNbFl3WTBkNGFGa3lWV2xNUTBwd1dWaFJhVTlxUlRGUFJGVjZUMFJqZDA1cVZYTkpiWEF3WVZOSk5rbHRTbWhhVkdkNVdrZEthMDVFU1RWTmVsSnRUbXBXYVZscWEzcGFiVWt6VFRKUmVrNVVRbXBOYlVrd1NXNHdMa0pzV2pSdFowNTVaMHBoU21ObWFUZzBPRlpxYTNWUFJqQkpRMlpLYUhKM1RqaFRjMlV0TjA1aFRVVT0ifX19"

