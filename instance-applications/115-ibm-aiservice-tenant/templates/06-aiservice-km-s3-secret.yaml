{{- $_job_name_prefix := printf "presync-copy-ai-secrets-%s" .Values.tenantNamespace }}

{{- $_cli_image_digest := "sha256:834dffd4da534c01daea4e0a6d9db7d00a9ad9b18b054cc034985fcaceedeacd" }}

{{- $_job_config_values := omit .Values "junitreporter" }}
{{- $_job_version := "v3" }}
{{- $_job_hash := print ($_job_config_values | toYaml) $_cli_image_digest $_job_version | adler32sum }}
{{- $_job_name := join "-" (list $_job_name_prefix $_job_hash ) }}
{{- $_job_cleanup_group := cat $_job_name_prefix | sha1sum }}
---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: copy-secret-job-{{ .Values.tenantNamespace }}
  namespace: {{ .Values.aiservice_namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "305"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader-{{ .Values.tenantNamespace }}
  namespace: {{ .Values.aiservice_namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "305"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-reader-binding-{{ .Values.tenantNamespace }}
  namespace: {{ .Values.aiservice_namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "306"
subjects:
  - kind: ServiceAccount
    name: copy-secret-job-{{ .Values.tenantNamespace }}
    namespace: {{ .Values.aiservice_namespace }}
roleRef:
  kind: Role
  name: secret-reader-{{ .Values.tenantNamespace }}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $_job_name }}
  namespace: {{ .Values.aiservice_namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "307"
  labels:
    mas.ibm.com/job-cleanup-group: {{ $_job_cleanup_group }}
{{- if .Values.custom_labels }}
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
spec:
  template:
    metadata:
      labels:
        app: sync-job
{{- if .Values.custom_labels }}
{{ .Values.custom_labels | toYaml | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: copy-secret-job-{{ .Values.tenantNamespace }}
      restartPolicy: OnFailure
      containers:
        - name: copy-secrets
          image: quay.io/ibmmas/cli@{{ $_cli_image_digest }}
          imagePullPolicy: IfNotPresent
          env:
            - name: SOURCE_NAMESPACE
              value: "{{ .Values.aiservice_namespace }}"
            - name: TARGET_NAMESPACE
              value: "{{ .Values.tenantNamespace }}"
            - name: SECRETS_TO_COPY
              value: "ibm-entitlement km-s3-secret"
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "Starting secret copy from $SOURCE_NAMESPACE to $TARGET_NAMESPACE"

              for SECRET_NAME in $SECRETS_TO_COPY; do
                echo "--------------------------------------------------------"
                echo "Copying secret: $SECRET_NAME"
                echo "--------------------------------------------------------"

                if ! kubectl get secret $SECRET_NAME -n $SOURCE_NAMESPACE -o yaml > /tmp/${SECRET_NAME}.yaml; then
                  echo "❌ Failed to get secret $SECRET_NAME from namespace $SOURCE_NAMESPACE"
                  exit 1
                fi

                sed -i "s/namespace: $SOURCE_NAMESPACE/namespace: $TARGET_NAMESPACE/" /tmp/${SECRET_NAME}.yaml

                if ! kubectl apply -f /tmp/${SECRET_NAME}.yaml; then
                  echo "❌ Failed to apply $SECRET_NAME to namespace $TARGET_NAMESPACE"
                  exit 1
                fi

                if ! kubectl get secret $SECRET_NAME -n $TARGET_NAMESPACE > /dev/null; then
                  echo "❌ Secret $SECRET_NAME not found in $TARGET_NAMESPACE after apply"
                  exit 1
                fi

                echo "✅ Successfully copied $SECRET_NAME to $TARGET_NAMESPACE"
              done

              echo "✅ All secrets copied successfully"

# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: copy-secret-job
#   namespace: {{ .Values.aiservice_namespace }}
#   annotations:
#     argocd.argoproj.io/sync-wave: "305"
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   name: secret-reader
#   namespace: {{ .Values.aiservice_namespace }}
#   annotations:
#     argocd.argoproj.io/sync-wave: "305"
# rules:
#   - apiGroups: [""]
#     resources: ["secrets"]
#     verbs: ["get", "list"]
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: secret-reader-binding
#   namespace: {{ .Values.aiservice_namespace }}
#   annotations:
#     argocd.argoproj.io/sync-wave: "306"
# subjects:
#   - kind: ServiceAccount
#     name: copy-secret-job
#     namespace: {{ .Values.aiservice_namespace }}
# roleRef:
#   kind: Role
#   name: secret-reader
#   apiGroup: rbac.authorization.k8s.io


# ---
# apiVersion: batch/v1
# kind: Job
# metadata:
#   name: copy-ibm-entitlement
#   namespace: {{ .Values.aiservice_namespace }}
#   annotations:
#     argocd.argoproj.io/sync-wave: "307"
# spec:
#   template:
#     spec:
#       serviceAccountName: copy-secret-job
#       containers:
#         - name: copy-secret
#           image: bitnami/kubectl:latest
#           command:
#             - /bin/sh
#             - -c
#             - |
#               echo "Copying ibm-entitlement secret from {{ .Values.aiservice_namespace }} to {{ .Values.tenantNamespace }}"
#               kubectl get secret ibm-entitlement -n {{ .Values.aiservice_namespace }} -o yaml | \
#               sed "s/namespace: {{ .Values.aiservice_namespace }}/namespace: {{ .Values.tenantNamespace }}/" | \
#               kubectl apply -f -
#       restartPolicy: OnFailure

# apiVersion: v1
# kind: Secret
# metadata:
#   name: ibm-entitlement
#   namespace: "{{ .Values.tenantNamespace }}"
#   labels:
#     app.kubernetes.io/managed-by: gitops
#   annotations:
#     argocd.argoproj.io/sync-wave: "305"
# type: Opaque
# data:
#   {{- with (lookup "v1" "Secret" .Values.ibm_aiservice_tenant.aiservice_namespace "ibm-entitlement") }}
#   {{- range $k, $v := .data }}
#   {{ $k }}: {{ $v }}
#   {{- end }}
#   {{- end }}
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: km-s3-secret
#   namespace: "{{ .Values.tenantNamespace }}"
#   labels:
#     app.kubernetes.io/managed-by: gitops
#   annotations:
#     {{- with (lookup "v1" "Secret" (printf "aiservice-%s" .Values.aiservice_instance_id) "km-s3-secret") }}
#     {{- if .metadata.annotations }}
#     {{- range $k, $v := .metadata.annotations }}
#     {{- if ne $k "argocd.argoproj.io/sync-wave" }}
#     {{ $k }}: {{ $v | quote }}
#     {{- end }}
#     {{- end }}
#     {{- end }}
#     {{- end }}
#     argocd.argoproj.io/sync-wave: "306"
# type: Opaque
# data:
#   {{- with (lookup "v1" "Secret" .Values.ibm_aiservice_tenant.aiservice_namespace "km-s3-secret") }}
#   {{- range $k, $v := .data }}
#   {{ $k }}: {{ $v }}
#   {{- end }}
#   {{- end }}

