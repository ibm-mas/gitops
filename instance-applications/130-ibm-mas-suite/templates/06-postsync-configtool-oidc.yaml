{{- /*
Meaningful prefix for the job resource name. Must be under 52 chars in length to leave room for the 11 chars reserved for '-' and $_job_hash.
*/}}
{{- $_job_name_prefix := "postsync-configtool-oidc-job" }}

{{- /*
Use the build/bin/set-cli-image-tag.sh script to update this value across all charts.
Included in $_job_hash (see below).
*/}}
{{- $_cli_image_tag := "13.5.0" }}

{{- /*
A dict of values that influence the behaviour of the job in some way.
Any changes to values in this dict will trigger a rerun of the job.
Since jobs must be idemopotent, it's generally safe to pass in values here that are not
strictly necessary (i.e. including some values that don't actually influence job behaviour).
We may want to refine this further though for jobs that can take a long time to complete.
Included in $_job_hash (see below).
*/}}
{{- $_job_config_values := omit .Values "junitreporter" }}

{{- /*
Increment this value whenever you make a change to an immutable field of the Job resource.
E.g. passing in a new environment variable.
Included in $_job_hash (see below).
*/}}
{{- $_job_version := "v9" }}

{{- /*
10 char hash appended to the job name taking into account $_job_config_values, $_job_version and $_cli_image_tag
This is to ensure ArgoCD will create a new job resource intead of attempting (and failing) to update an
immutable field of any existing Job resource.
*/}}
{{- $_job_hash := print ($_job_config_values | toYaml) $_cli_image_tag $_job_version | adler32sum }}

{{- $_job_name := join "-" (list $_job_name_prefix $_job_hash )}}



{{ $ns :=                 printf "mas-%s-core" .Values.instance_id }}
{{ $np_name :=            "postsync-configtool-oidc-np" }}
{{ $role_name :=          "postsync-configtool-oidc-r" }}
{{ $sa_name :=            "postsync-configtool-oidc-sa" }}
{{ $rb_name :=            "postsync-configtool-oidc-rb" }}
{{ $job_label :=          "postsync-configtool-oidc-job" }}
{{ $oauth_admin_secret := printf "%s-credentials-oauth-admin" .Values.instance_id }}

---
# Permit outbound communication by the Job pods
# (Needed to communicate with the K8S HTTP API and AWS SM)
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ $np_name }}
  namespace: {{ $ns }}
  annotations:
    argocd.argoproj.io/sync-wave: "143"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
spec:
  podSelector:
    matchLabels:
      app: {{ $job_label }}
  egress:
    - {}
  policyTypes:
    - Egress


---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $sa_name }}
  namespace: {{ $ns }}
  annotations:
    argocd.argoproj.io/sync-wave: "143"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $role_name }}
  namespace: {{ $ns }}
  annotations:
    argocd.argoproj.io/sync-wave: "143"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
rules: []

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $rb_name }}
  namespace: {{ $ns }}
  annotations:
    argocd.argoproj.io/sync-wave: "144"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
subjects:
  - kind: ServiceAccount
    name: {{ $sa_name }}
    namespace: {{ $ns }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $role_name }}


---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $_job_name }}
  namespace: {{ $ns }}
  annotations:
    argocd.argoproj.io/sync-wave: "145"
{{- if .Values.custom_labels }}
  labels:
{{ .Values.custom_labels | toYaml | indent 4 }}
{{- end }}
spec:
  template:
    metadata:
      labels:
        app: {{ $job_label }}
{{- if .Values.custom_labels }}
{{ .Values.custom_labels | toYaml | indent 8 }}
{{- end }}
    spec:
      containers:
        - name: run
          image: quay.io/ibmmas/cli:{{ $_cli_image_tag }}
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          env:
            # .Values.DOMAIN:
            #   dns.cis.subdomain (if set) - e.g. fvtsaas.ibmmasfvt.com
            #   mas_instance.domain (otherwise) - e.g. mascore3763.apps.noble6.cp.fyre.ibm.com
            - name: DOMAIN
              value: {{ .Values.domain }}

            - name: OIDC_CONFIG_YAML
              value: {{ .Values.oidc | toYaml | replace "\n" "\\n" }}
                
          volumeMounts:
            - name: oauth-admin-secret
              mountPath: /etc/mas/creds/oauth_admin_secret
            
          command:
            - /bin/sh
            - -c
            - |

              set -e

              export OAUTH_ADMIN_USERNAME="$(cat /etc/mas/creds/oauth_admin_secret/oauth-admin-username)"
              export OAUTH_ADMIN_PWD="$(cat /etc/mas/creds/oauth_admin_secret/oauth-admin-password)"

              if $(echo -e "${OIDC_CONFIG_YAML}" | yq --exit-status=1 eval '(. | has("configtool")) and (.configtool | has("trusted_uri_prefixes"))' 1>/dev/null 2>&1); then
                echo "- oidc.configtool configuration supplied, (re)registering client"
                echo "--------------------------------------------------------------"
                echo ""
                TRUST_UI_PREFIX=$(echo -e "${OIDC_CONFIG_YAML}" | yq eval '.configtool.trusted_uri_prefixes | join(",")')
                # NOTE: "x" is used as workspace ID. This is just so the MAS_HOME parameter conforms to the format expected by the 
                # configtool-oidc script. This is not a workspace-level operation. Its actual value is not used for anything else.
                mas configtool-oidc \
                  register \
                  --mas-home "x.home.${DOMAIN}" \
                  --ui-prefix "${TRUST_UI_PREFIX}"
              else
                echo "- oidc.configtool configuration absent, unregistering client"
                echo "--------------------------------------------------------------"
                echo ""
                mas configtool-oidc \
                  unregister \
                  --mas-home "x.home.${DOMAIN}" \
                  --ui-prefix "not_used_but_must_be_set"
              fi

              
      restartPolicy: Never
      serviceAccountName: "{{ $sa_name }}"
      volumes:
        - name: oauth-admin-secret
          secret:
            secretName: "{{ $oauth_admin_secret }}"
            defaultMode: 420
            optional: false
  backoffLimit: 4

