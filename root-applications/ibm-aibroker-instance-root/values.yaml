---

avp:
  name: "argocd-vault-plugin-helm"
  secret: ""
  values_varname: "HELM_VALUES"

account:
  id: dev

cluster:
  id: cluster1

region:
  id: region1 

instance:
  id: inst1

source:
  repo_url: "https://github.com/ibm-mas/gitops"
  revision: "poc"

# Customers will definitely need to customise this (our gitops-envs/mas-dev repos are private),
# So deliberately not specifying defaults here; we want charts to refuse to render if these are not specified
# Both of these correspond to requirement arguments of the gitops-bootstrap CLI function (--github-url and --github-revision)
# generator:
#   repo_url: ""
#   revision: ""

# These defaults align with the ArgoCD worker setup by gitops-bootstrap
# (openshift-gitops with a single ArgoCD project "mas")
argo:
  namespace: "openshift-gitops"
  projects:
    rootapps: "mas"
    apps: "mas"


auto_delete: false

sm:
  aws_access_key_id: xxxx

run_sanity_test: false

devops:
  mongo_uri:
  build_number:

ibm_minio:
  minio_namespace: "minio_namespace"
  minio_instance_name: "minio"
  minio_root_user: "minio"
  minio_root_password: ""
  minio_storage_class: "default"
  minio_storage_size: "40Gi"
  minio_image: "quay.io/minio/minio:latest"


ibm_odh:
  openshift_namespace: "openshift-operators"
  odh_pipeline_channel: "latest"
  odh_pipeline_installplan: "Automatic"
  service_mesh_namespace: "openshift-serverless"
  service_mesh_channel: "stable"
  service_mesh_catalog_source: "redhat-operators"
  serverless_channel: "stable"
  authorino_catalog_source: "community-operators"
  odh_channel: "fast"
  odh_catalog_source: "community-operators"
  odh_operator_version: "opendatahub-operator.v2.11.1"

  aibroker_namespace: "mas_sremat_aibroker"
  pull_secret_name: "ibm_entitlement"
  mas_aibroker_storage_provider: "minio"
  mas_aibroker_storage_accesskey: ""
  mas_aibroker_storage_secretkey: ""
  mas_aibroker_storage_host: "mas_aibroker_storage_host"
  mas_aibroker_storage_port: "mas_aibroker_storage_port"
  mas_aibroker_storage_ssl: "mas_aibroker_storage_ssl"
  mas_aibroker_storage_region: "mas_aibroker_storage_region"

  # MariaDB
  mas_aibroker_db_host: "mas_aibroker_db_host"
  mas_aibroker_db_port: "mas_aibroker_db_port"
  mas_aibroker_db_user: "mas_aibroker_db_user"
  mas_aibroker_db_database: "mas_aibroker_db_database"

  mas_aibroker_db_secret_key: "mas_aibroker_db_secret_key"
  mas_aibroker_db_secret_name: "mas_aibroker_db_secret_name"
  mas_aibroker_db_secret_value: "mas_aibroker_db_secret_value"

  mas_aibroker_storage_pipelines_bucket: "mas_aibroker_storage_pipelines_bucket"
  primary_storage_class: "nfs-client"


ibm_kmodel:
  openshift_namespace: "openshift-operators"
  run_sync_hooks: true
  aibroker_namespace: "mas-sremat-aibroker"
  mas_aibroker_storage_provider: "aws"
  mas_aibroker_storage_ssl: "true"
  # following are the variable need to injected via environment variable 
  mas_aibroker_storage_accesskey: "mas_aibroker_storage_accesskey"
  mas_aibroker_storage_secretkey: "mas_aibroker_storage_secretkey"
  mas_aibroker_storage_host: "mas_aibroker_storage_host"
  mas_aibroker_storage_port: "mas_aibroker_storage_port"
  mas_aibroker_storage_region: "mas_aibroker_storage_region"
  ssh_secret_name: "sremat-internal-aibroker-tls"
  # vars file for kmodels
  pullSecretName: "ibm-entitlement"
  docker_server: "MAS_ICR_CP/aibroker"
  tenantNamespace: "aibroker-MAS_AIBROKER_TENANT_NAME"
  mas_aibroker_provision_tenant: "MAS_AIBROKER_PROVISION_TENANT"
  primary_storage_class: "PRIMARY_STORAGE_CLASS"
  # Bucket names
  mas_aibroker_storage_templates_bucket: "MAS_AIBROKER_STORAGE_TEMPLATES_BUCKET"
  mas_aibroker_storage_tenants_bucket: "MAS_AIBROKER_STORAGE_TENANTS_BUCKET"
  mas_aibroker_storage_pipelines_bucket: "mas_aibroker_storage_pipelines_bucket"
  #container images
  image_store: "MAS_ICR_CP/aibroker/store:1.0.2"
  image_watcher: "MAS_ICR_CP/aibroker/watcher:1.0.2-pre.dev10x"
  image_controller: "MAS_ICR_CP/aibroker/controller:1.0.2-pre.dev10x"
  mas_aibroker_pipeline_steps_tag: 1.0.0
  mas_aibroker_connector_tag: 1.0.0

ibm_aibroker:
  mas_instance_id: "sremat"
  aibroker_namespace: 'mas-{{ mas_instance_id }}-aibroker'
  mas_aibroker_minio_secret: "minio_secret"
  # Minio
  mas_aibroker_storage_accesskey: "mas_aibroker_storage_accesskey"
  mas_aibroker_storage_secretkey: "mas_aibroker_storage_secretkey"
  # MariaDB
  mas_aibroker_mariadb_secret: "{{ mas_app_id }}-mariadbcfg"
  mas_aibroker_db_user: "MAS_AIBROKER_DB_USER"
  mas_aibroker_db_secret_value: "MAS_AIBROKER_DB_SECRET_VALUE"

  # WatsonX
  mas_aibroker_watsonx_secret: "{{ mas_app_id }}-watsonxcfg"
  mas_aibroker_watsonxai_apikey: "MAS_AIBROKER_WATSONXAI_APIKEY"
  mas_aibroker_watsonxai_url: "MAS_AIBROKER_WATSONXAI_URL"
  mas_aibroker_watsonxai_project_id: "MAS_AIBROKER_WATSONXAI_PROJECT_ID"

  # S3
  s3_apikey: "S3_APIKEY"
  mas_aibroker_storage_accesskey: "true"
  mas_aibroker_storage_secretkey: "MAS_AIBROKER_STORAGE_SECRETKEY"

  mas_aibroker_storage_host: "true"
  mas_aibroker_storage_port: "true"

  # SLS
  mas_aibroker_sls_registration_key_secret: "sls-registration-key"

  mas_aibroker_db_host: "MAS_AIBROKER_DB_HOST"
  mas_aibroker_db_port: "MAS_AIBROKER_DB_PORT"
  mas_aibroker_db_secret_name: "MAS_AIBROKER_DB_SECRET_NAME"

  # Bucket names
  mas_aibroker_storage_pipelines_bucket: "MAS_AIBROKER_STORAGE_PIPELINES_BUCKET"
  mas_aibroker_storage_tenants_bucket: "MAS_AIBROKER_STORAGE_TENANTS_BUCKET"
  mas_aibroker_storage_templates_bucket: "MAS_AIBROKER_STORAGE_TEMPLATES_BUCKET"

  slscfg:
    registration_key: "registration_key"

  #  DRO
  mas_aibroker_dro_token_secret: "dro-token"
  mas_aibroker_dro_cacert_secret: "dro-certificates"
  drocfg:  
    url: "{{ drocfg[1].spec.config.url }}"
    ca: "ca.crt"
    registration_key: "DRO_TOKEN" 

  # JDBC
  mas_aibroker_db2_jdbc_secret: "{{ mas_app_id }}-jdbccfg-binding"

  jdbccfg:
    username: "username"
    password: "password"
    url: "url"
    sslenabled: "sslenabled"
    ca: "ca"

  # MAS Entitlement
  mas_entitlement_username: "MAS_ENTITLEMENT_USERNAME"
  mas_entitlement_key: "MAS_ENTITLEMENT_KEY"

  # Development Registry Entitlement
  artifactory_username: "ARTIFACTORY_USERNAME"
  artifactory_token: "ARTIFACTORY_TOKEN"

  # Environment Variable:
  mas_app_channel: "mas_app_channel"

  # aibroker vars
  mas_catalog_source: "MAS_CATALOG_SOURCE"
   