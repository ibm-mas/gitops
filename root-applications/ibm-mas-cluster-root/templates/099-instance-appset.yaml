
---
# IBM Maximo Application Suite Instance Application Set
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: instance-appset.{{.Values.account.id}}.{{.Values.region.id}}.{{ .Values.cluster.id }}
  namespace: {{ .Values.argoapp_namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "099"
spec:
  goTemplate: true
  generators:
    - merge:
        mergeKeys:
          # Would love to use ".path.path" here to merge the configs together
          # but this is not possible currently with goTemplate: true - see https://github.com/argoproj/argo-cd/issues/12836
          # (and we really want goTemplate: true so we can dump the entire config file into HELM_VALUES using toPrettyJson)
          # instead, we are forced to explicitly provide a merge key in all of our config files to make them line up
          - 'merge-key'
        generators:
          # This is the "base" generator, it *must* be first in the list
          - git:
              repoURL: "{{ .Values.generator.repoURL }}"
              revision: "{{ .Values.generator.revision }}"
              files:
              - path: "{{ .Values.account.id }}/{{ .Values.region.id }}/{{ .Values.cluster.id }}/*/ibm-mas-instance-base.yaml"
          - git:
              repoURL: "{{ .Values.generator.repoURL }}"
              revision: "{{ .Values.generator.revision }}"
              files:
              - path: "{{ .Values.account.id }}/{{ .Values.region.id }}/{{ .Values.cluster.id }}/*/ibm-mas-suite.yaml"
          - git:
              repoURL: "{{ .Values.generator.repoURL }}"
              revision: "{{ .Values.generator.revision }}"
              files:
              - path: "{{ .Values.account.id }}/{{ .Values.region.id }}/{{ .Values.cluster.id }}/*/ibm-sls.yaml"
          - git:
              repoURL: "{{ .Values.generator.repoURL }}"
              revision: "{{ .Values.generator.revision }}"
              files:
              - path: "{{ .Values.account.id }}/{{ .Values.region.id }}/{{ .Values.cluster.id }}/*/ibm-mas-workspace.yaml"
          - git:
              repoURL: "{{ .Values.generator.repoURL }}"
              revision: "{{ .Values.generator.revision }}"
              files:
              - path: "{{ .Values.account.id }}/{{ .Values.region.id }}/{{ .Values.cluster.id }}/*/ibm-mas-suite-configs.yaml"
          - git:
              repoURL: "{{ .Values.generator.repoURL }}"
              revision: "{{ .Values.generator.revision }}"
              files:
              - path: "{{ .Values.account.id }}/{{ .Values.region.id }}/{{ .Values.cluster.id }}/*/ibm-db2u-databases.yaml"

  template:
    metadata:
      name: "instance.{{.Values.account.id}}.{{.Values.region.id}}.{{ .Values.cluster.id }}.{{ `{{.instance.id}}` }}"
      labels:
        cloud: aws
        environment: '{{ .Values.account.id }}'
        region: '{{ .Values.region.id }}'
        cluster: '{{ .Values.cluster.id }}'
        instance: '{{ `{{.instance.id}}` }}'
      annotations:
        healthCheckTimeout: "1800"
        argocd.argoproj.io/sync-wave: "099"
        {{- if and .Values.notifications .Values.notifications.slack_channel_id }}
        notifications.argoproj.io/subscribe.on-sync-failed.workspace1: {{ .Values.notifications.slack_channel_id }}
        notifications.argoproj.io/subscribe.on-sync-succeeded.workspace1: {{ .Values.notifications.slack_channel_id }}
        {{- end }}
    spec:
      project: "{{ .Values.argo_project_rootapps | default "mas" }}"
      source:
          repoURL: "{{ .Values.source.repoURL }}"
          targetRevision: "{{ .Values.source.targetRevision }}"
          path: root-applications/ibm-mas-instance-root
          helm:
            releaseName: instanceappset
            values: "{{ `{{ toYaml . }}` }}"
            parameters:
              - name: "generator.repoURL"
                value: "{{ .Values.generator.repoURL }}"
              - name: "generator.revision"
                value: "{{ .Values.generator.revision }}"
              - name: "source.targetRevision"
                value: "{{ .Values.source.targetRevision }}"
              - name: "source.repoURL"
                value: "{{ .Values.source.repoURL }}"
              - name: argoapp_namespace
                value: "{{ .Values.argoapp_namespace }}"
                {{- if and .Values.notifications .Values.notifications.slack_channel_id }}
              - name: "notifications.slack_channel_id"
                value: "{{ .Values.notifications.slack_channel_id }}"
                {{- end }}
              - name: argo_project_rootapps
                value: "{{ .Values.argo_project_rootapps | default "mas" }}"
              - name: argo_project_apps
                value: "{{ .Values.argo_project_apps | default "mas" }}"
              - name: avp.name
                value: "{{ .Values.avp.name }}"
              - name: avp.secret
                value: "{{ .Values.avp.secret }}"
              - name: avp.values_varname
                value: "{{ .Values.avp.values_varname }}"
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: {{ .Values.argoapp_namespace }}
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
          allowEmpty: true
        syncOptions:
          - CreateNamespace=false
          - RespectIgnoreDifferences=true
      ignoreDifferences:
        - group: '*'
          kind: ServiceAccount
          jsonPointers:
            - /imagePullSecrets
        - group: 'marketplace.redhat.com/v1alpha1'
          kind: MarketplaceConfig
          jsonPointers:
            - /spec