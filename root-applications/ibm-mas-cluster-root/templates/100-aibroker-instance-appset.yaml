
---
# IBM Maximo Application Suite Instance Application Set
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: instance-appset.{{ .Values.cluster.id }}
  namespace: {{ .Values.argo.namespace }}
  labels:
    environment: '{{ .Values.account.id }}'
    cluster: '{{ .Values.cluster.id }}'
    region: '{{ .Values.region.id }}'
  annotations:
    argocd.argoproj.io/sync-wave: "100"
spec:
  goTemplate: true
  generators:
    - merge:
        mergeKeys:
          # Would love to use ".path.path" here to merge the configs together
          # but this is not possible currently with goTemplate: true - see https://github.com/argoproj/argo-cd/issues/12836
          # (and we really want goTemplate: true so we can dump the entire config file into HELM_VALUES using toPrettyJson)
          # instead, we are forced to explicitly provide a merge key in all of our config files to make them line up
          - 'merge-key'
        generators:
          # This is the "base" generator, it *must* be first in the list

          - git:
              repoURL: "{{ .Values.generator.repo_url }}"
              revision: "{{ .Values.generator.revision }}"
              files:
              - path: "{{ .Values.account.id }}/{{ .Values.cluster.id }}/{{ .Values.region.id }}/*/ibm-aibroker-instance-base.yaml"
          - git:
              repoURL: "{{ .Values.generator.repo_url }}"
              revision: "{{ .Values.generator.revision }}"
              files:
              - path: "{{ .Values.ibm_minio.minio_namespace }}/{{ .Values.ibm_minio.minio_root_user }}/{{ .Values.ibm_minio.minio_root_password }}/{{ .Values.ibm_minio.minio_storage_class }}/{{ .Values.ibm_minio.minio_storage_size }}/{{ .Values.ibm_minio.minio_image }}/*/ibm-aibroker-minio-install.yaml"
 
  syncPolicy:
    applicationsSync: "{{- if .Values.auto_delete }}sync{{- else }}create-update{{- end }}"
  template:
    metadata:
      name: "instance.{{ .Values.cluster.id }}.{{ `{{.instance.id}}` }}"
      labels:
        environment: '{{ .Values.account.id }}'
        region: '{{ .Values.region.id }}'
        cluster: '{{ .Values.cluster.id }}'
        instance: '{{ `{{.instance.id}}` }}'
{{- if .Values.custom_labels }}
{{ .Values.custom_labels | toYaml | indent 8 }}
{{- end }}
      annotations:
        healthCheckTimeout: "1800"
        argocd.argoproj.io/sync-wave: "099"
        {{- if and .Values.notifications .Values.notifications.slack_channel_id }}
        notifications.argoproj.io/subscribe.on-sync-failed.workspace1: {{ .Values.notifications.slack_channel_id }}
        notifications.argoproj.io/subscribe.on-sync-succeeded.workspace1: {{ .Values.notifications.slack_channel_id }}
        {{- end }}
    spec:
      project: "{{ .Values.argo.projects.rootapps }}"
      source:
          repoURL: "{{ .Values.source.repo_url }}"
          targetRevision: "{{ .Values.source.revision }}"
          path: root-applications/ibm-aibroker-instance-root
          helm:
            releaseName: instanceappset
            values: "{{ `{{ toYaml . }}` }}"
            parameters:
              - name: "generator.repo_url"
                value: "{{ .Values.generator.repo_url }}"
              - name: "generator.revision"
                value: "{{ .Values.generator.revision }}"
              - name: "source.revision"
                value: "{{ .Values.source.revision }}"
              - name: "source.repo_url"
                value: "{{ .Values.source.repo_url }}"
              - name: "argo.namespace"
                value: "{{ .Values.argo.namespace }}"
             
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: {{ .Values.argo.namespace }}
      syncPolicy:
        automated:
          {{- if .Values.auto_delete }}
          prune: true
          {{- end }}
          selfHeal: true
        syncOptions:
          - CreateNamespace=false
          - RespectIgnoreDifferences=true
        retry:
          limit: -1
      ignoreDifferences:
        - group: '*'
          kind: ServiceAccount
          jsonPointers:
            - /imagePullSecrets
        - group: 'marketplace.redhat.com/v1alpha1'
          kind: MarketplaceConfig
          jsonPointers:
            - /spec
      # revisionHistoryLimit set to 1 due to size limit of what can be stored in etcd for anything larger
      revisionHistoryLimit: 1
