{{- if not (empty .Values.mas_provisioner) }}
---
# Cluster Promotion
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mas-provisioner.{{ .Values.cluster.id }}
  namespace: {{ .Values.argo.namespace }}
  labels:
    cloud: aws
    environment: '{{ .Values.account.id }}'
    region: '{{ .Values.region.id }}'
    cluster: '{{ .Values.cluster.id }}'
  annotations:
    argocd.argoproj.io/sync-wave: "300"
    healthCheckTimeout: "1800"
    {{- if and .Values.notifications .Values.notifications.slack_channel_id }}
    notifications.argoproj.io/subscribe.on-sync-failed.workspace1: {{ .Values.notifications.slack_channel_id }}
    notifications.argoproj.io/subscribe.on-sync-succeeded.workspace1: {{ .Values.notifications.slack_channel_id }}
    {{- end }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: "{{ .Values.argo.projects.apps }}"
  destination:
    server: {{ .Values.cluster.url }}
    namespace: "{{ .Values.mas_provisioner.provisioner_namespace }}"
  source:
    repoURL: "{{ .Values.source.repo_url }}"
    path: cluster-applications/300-mas-provisioner
    targetRevision: "{{ .Values.source.revision }}"
    plugin:
      name: {{ .Values.avp.name }} 
      env:
        - name: {{ .Values.avp.values_varname }}
          value: |
            argo_namespace: "{{ .Values.argo.namespace }}"
            account_alias: "{{ .Values.mas_provisioner.account_alias }}"
            broker_domain: "{{ .Values.mas_provisioner.provisioner_domain }}"
            ibm_entitlement_key: "{{ .Values.mas_provisioner.ibm_entitlement }}"
            provisioner_namespace: "{{ .Values.mas_provisioner.provisioner_namespace }}"
            provisioner_version: "{{ .Values.mas_provisioner.provisioner_version }}"
            enable_mtls: "{{ .Values.mas_provisioner.enable_mtls }}"
            github_token: "{{ .Values.mas_provisioner.github_token }}"
            csb_client_ca: "{{ .Values.mas_provisioner.csb_client_ca }}"
            pd_key: "{{ .Values.mas_provisioner.pagerduty_integration }}"
            service_port: "{{ .Values.mas_provisioner.service_port }}"
            status_repo_url: "{{ .Values.mas_provisioner.status_repo_url }}"
            base_branch: "{{ .Values.mas_provisioner.base_branch }}"
            async_poll_interval: "{{ .Values.mas_provisioner.async_poll_interval }}"
            async_poll_max: "{{ .Values.mas_provisioner.async_poll_max }}"
            instana_api_token: "{{ .Values.mas_provisioner.instana_api_token }}"
            enable_pd_alert: "{{ .Values.mas_provisioner.enable_pd_alert }}"
            enable_ocm_alert: "{{ .Values.mas_provisioner.enable_ocm_alert }}"
            ocm_api_key: "{{ .Values.mas_provisioner.ocm_api_token }}"
            junitreporter:
              reporter_name: "mas-provisioner"
              cluster_id: "{{ .Values.cluster.id }}"
              devops_mongo_uri: "{{ .Values.devops.mongo_uri }}"
              devops_build_number: "{{ .Values.devops.build_number }}"
              gitops_version: "{{ .Values.source.revision }}"
            {{- if .Values.custom_labels }}
            custom_labels: {{ .Values.custom_labels | toYaml | nindent 14 }}
            {{- end }}
        - name: ARGOCD_APP_NAME
          value: masprovisionerapp
        {{- if not (empty .Values.avp.secret) }}
        - name: AVP_SECRET
          value: {{ .Values.avp.secret }}
        {{- end }}
  ignoreDifferences:
    - jsonPointers:
        - /imagePullSecrets
        - /secrets
      kind: ServiceAccount
  syncPolicy:
    automated:
      {{- if .Values.auto_delete }}
      prune: true
      {{- end }}
      selfHeal: true
    retry:
      limit: 20
    syncOptions:
      - CreateNamespace=true
      - RespectIgnoreDifferences=true
    managedNamespaceMetadata:
      labels:
{{- if .Values.custom_labels }}
{{ .Values.custom_labels | toYaml | indent 8 }}
{{- end }}
{{- end }}
