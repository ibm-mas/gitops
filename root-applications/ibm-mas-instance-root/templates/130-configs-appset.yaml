---
# IBM Cloud Pak Foundational Services

# Re the additional applications/ibm-mas-config-cleanup chart
#   Because the CR has an owner (Suite), ArgoCD won't cleanup the CR when the application is removed,
#   so we need to call oc delete ourselves (and we have to do this from within the cluster itself as our deprovision scripts cannot access oc directly.
#   For now, as a temporary solution: this chart conditionally renders templates containing a Job that deletes the CR when the "delete" flag is set by our provision scripts
#   prior to deletion of the config itself.
#   TODO: change to OnDelete hook once we have access to ArgoCD 2.10
#   See https://jsw.ibm.com/browse/MASCORE-1643
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: configs-appset.{{.Values.account.id}}.{{.Values.region.id}}.{{ .Values.cluster.id }}.{{ .Values.instance.id }}
  namespace: {{ .Values.argoapp_namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "130"
spec:
  goTemplate: true
  generators:
    - git:
        repoURL: "{{ .Values.generator.repoURL }}"
        revision: "{{ .Values.generator.revision }}"
        files:
          - path: "{{ .Values.account.id }}/{{ .Values.region.id }}/{{ .Values.cluster.id }}/{{ .Values.instance.id }}/configs/*.yaml"
  template:
    metadata:
      name: "{{ `{{.mas_config_name}}` }}.{{.Values.account.id}}.{{.Values.region.id}}.{{ .Values.cluster.id }}.{{ .Values.instance.id }}"
      labels:
        cloud: aws
        environment: '{{ .Values.account.id }}'
        region: '{{ .Values.region.id }}'
        cluster: '{{ .Values.cluster.id }}'
        instance: '{{ .Values.instance.id }}'
    spec:
      project: mas
      source:
        repoURL: https://github.com/ibm-mas/gitops
        targetRevision: "{{ .Values.source.targetRevision }}"
        path: root-applications/ibm-mas-config-root
        helm:
          releaseName:  "{{ `{{.mas_config_chart}}` }}"
          values: |
            {{ `{{toRawJson .}}` }}
          parameters:
            - name: "generator.repoURL"
              value: "{{ .Values.generator.repoURL }}"
            - name: "generator.revision"
              value: "{{ .Values.generator.revision }}"
            - name: "source.targetRevision"
              value: "{{ .Values.source.targetRevision }}"
            - name: argoapp_namespace
              value: "{{ .Values.argoapp_namespace }}"

            - name: account.id
              value: "{{ .Values.account.id }}"
            - name: region.id
              value: "{{ .Values.region.id }}"
            - name: cluster.id
              value: "{{ .Values.cluster.id }}"
            - name: cluster.url
              value: "{{ .Values.cluster.url }}"
            - name: instance.id
              value: "{{ .Values.instance.id }}"
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: {{ .Values.argoapp_namespace }}
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
          allowEmpty: true
        syncOptions:
          - CreateNamespace=false
          - RespectIgnoreDifferences=true
      ignoreDifferences:
        - group: '*'
          kind: ServiceAccount
          jsonPointers:
            - /imagePullSecrets
        - group: 'marketplace.redhat.com/v1alpha1'
          kind: MarketplaceConfig
          jsonPointers:
            - /spec
