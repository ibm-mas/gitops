
---
# IBM Cloud Pak Foundational Services
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: ma-appset.{{.Values.account.id}}.{{.Values.region.id}}.{{ .Values.cluster.id }}.{{ .Values.instance.id }}
  namespace: {{ .Values.argoapp_namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "500"
spec:
  goTemplate: true
  generators:
    - merge:
        mergeKeys:
          # Would love to use ".path.path" here to merge the configs together
          # but this is not possible currently with goTemplate: true - see https://github.com/argoproj/argo-cd/issues/12836
          # (and we really want goTemplate: true so we can dump the entire config file into HELM_VALUES using toPrettyJson)
          # instead, we are forced to explicitly provide a merge key in all of our config files to make them line up
          - 'merge-key'
        generators:
          # This is the "base" generator, it *must* be first in the list
          - git:
              repoURL: "{{ .Values.generator.repo_url }}"
              revision: "{{ .Values.generator.revision }}"
              files:
              - path: "{{ .Values.account.id }}/{{ .Values.region.id }}/{{ .Values.cluster.id }}/{{ .Values.instance.id }}/masapps/*/ibm-mas-masapp-base.yaml"
          - git:
              repoURL: "{{ .Values.generator.repo_url }}"
              revision: "{{ .Values.generator.revision }}"
              files:
              - path: "{{ .Values.account.id }}/{{ .Values.region.id }}/{{ .Values.cluster.id }}/{{ .Values.instance.id }}/masapps/*/ibm-mas-masapp-install.yaml"
          - git:
              repoURL: "{{ .Values.generator.repo_url }}"
              revision: "{{ .Values.generator.revision }}"
              files:
              - path: "{{ .Values.account.id }}/{{ .Values.region.id }}/{{ .Values.cluster.id }}/{{ .Values.instance.id }}/masapps/*/ibm-mas-masapp-config.yaml"

  template:
    metadata:
      name: "ma.{{.Values.account.id}}.{{.Values.region.id}}.{{ .Values.cluster.id }}.{{ .Values.instance.id }}.{{ `{{.masapp.id}}` }}"
      labels:
        cloud: aws
        environment: '{{ .Values.account.id }}'
        region: '{{ .Values.region.id }}'
        cluster: '{{ .Values.cluster.id }}'
        instance: '{{ .Values.instance.id }}'
        masapp: '{{ `{{.masapp.id}}` }}'
      annotations:
        argocd.argoproj.io/sync-wave: "500"
        {{- if and .Values.notifications .Values.notifications.slack_channel_id }}
        notifications.argoproj.io/subscribe.on-sync-failed.workspace1: {{ .Values.notifications.slack_channel_id }}
        notifications.argoproj.io/subscribe.on-sync-succeeded.workspace1: {{ .Values.notifications.slack_channel_id }}
        {{- end }}
    spec:
      project: "{{ .Values.argo_project_apps | default "mas" }}"
      sources:
        - repoURL: "{{ .Values.source.repo_url }}"
          targetRevision: "{{ .Values.source.revision }}"
          path: applications/500-ibm-mas-suite-app-install
          plugin:
            name: {{ .Values.avp.name }} 
            env:
              - name: {{ .Values.avp.values_varname }}
                value: |
                  {{` 
                    {{
                      toRawJson (
                        merge 
                          . 
                          (
                            dict "generator" (
                              dict 
                                "repoURL" "`}}{{ .Values.generator.repo_url }}{{`"
                                "revision" "`}}{{ .Values.generator.revision }}{{`"
                            )
                          )
                          (
                            dict "source" (
                              dict 
                                "targetRevision" "`}}{{ .Values.source.revision }}{{`"
                                "repoURL" "`}}{{ .Values.source.repo_url }}{{`"
                            )
                          )
                          (
                            dict "argoapp_namespace" "`}}{{ .Values.argoapp_namespace}}{{`"
                          )
                      )
                    }}
                  `}}
              - name: ARGOCD_APP_NAME
                value: "{{ `{{.masapp.id}}` }}-install"
              {{- if not (empty .Values.avp.secret) }}
              - name: AVP_SECRET
                value: {{ .Values.avp.secret }}
              {{- end }}
        - repoURL: "{{ .Values.source.repo_url }}"
          targetRevision: "{{ .Values.source.revision }}"
          path: applications/600-ibm-mas-suite-app-config
          plugin:
            name: {{ .Values.avp.name }} 
            env:
              - name: {{ .Values.avp.values_varname }}
                value: |
                  {{` 
                    {{
                      toRawJson (
                        merge 
                          . 
                          (
                            dict "generator" (
                              dict 
                                "repoURL" "`}}{{ .Values.generator.repo_url }}{{`"
                                "revision" "`}}{{ .Values.generator.revision }}{{`"
                            )
                          )
                          (
                            dict "source" (
                              dict 
                                "targetRevision" "`}}{{ .Values.source.revision }}{{`"
                                "repoURL" "`}}{{ .Values.source.repo_url }}{{`"
                            )
                          )
                          (
                            dict "argoapp_namespace" "`}}{{ .Values.argoapp_namespace}}{{`"
                          )
                      )
                    }}
                  `}}
              - name: ARGOCD_APP_NAME
                value: "{{ `{{.masapp.id}}` }}-config"
              {{- if not (empty .Values.avp.secret) }}
              - name: AVP_SECRET
                value: {{ .Values.avp.secret }}
              {{- end }}
      destination:
        server: "{{ .Values.cluster.url }}"
        namespace: "default"
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=false
          - RespectIgnoreDifferences=true
      ignoreDifferences:
        - group: '*'
          kind: ServiceAccount
          jsonPointers:
            - /imagePullSecrets
        - group: 'marketplace.redhat.com/v1alpha1'
          kind: MarketplaceConfig
          jsonPointers:
            - /spec